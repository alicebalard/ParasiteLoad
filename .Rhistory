model = "negbin", group = "Sex")
fit_flotation_negbin
bananaPlots(mod = fit_flotation_negbin$H0, data = flotation_data,
response = "OPG+1")
bananaPlots
hybridIndex = seq(0,1, 0.01)
cols = c("green", "orange")
islog10 = F
mod = fit_flotation_negbin$H0
data = flotation_data
response = "OPG+1"
bananaPlots
hybridIndex = seq(0,1, 0.01)
cols = c("green", "orange")
islog10 = F
fit_flotation_negbin
data$`OPG+1`
data$response = data[[response]]
# if(is.list(mod) == FALSE){ # we do not have differences between groups
bananaDF = getBananaDF(mod, hybridIndex)
# getBananaDF <- function(mod, hybridIndex){
## profile investigates behavior of objective function near the MLE
myProf <- bbmle::profile(mod)
myProf
## Marginal confidence interval
myConfInt <- bbmle::confint(myProf)
View(myConfInt)
mod
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
# add 1 for worms/oocysts count!!
WATWMdata$`Aspiculuris.Syphacia+1` <- WATWMdata$Aspiculuris.Syphacia + 1
BALdata$`Aspiculuris.Syphacia+1` <- BALdata$Aspiculuris_Syphacia + 1
BALdata$OPG
range(BALdata$OPG)
range(BALdata$OPG, na.rm = T)
max(BALdata$OPG, na.rm = T)
max(log10(BALdata$OPG, na.rm = T))
max(log10(BALdata$OPG))
max(log10(BALdata$OPG), na.rm = T)
hist(BALdata$OPG)
OPG
BALdata$OPG
min(BALdata$OPG[BALdata$OPG >0])
min(BALdata$OPG[BALdata$OPG >0], na.rm = T)
BALdata$OPG == 31
BALdata[BALdata$OPG == 31,]
BALdata[BALdata$OPG %in%31,]
BALdata[BALdata$OPG > 0,]
BALdata[!is.na(BALdata$OPG) & BALdata$OPG > 0,]
BALdata[!is.na(BALdata$OPG) & BALdata$OPG > 0,"qPCRsummary"]
BALdata[!is.na(BALdata$OPG) & BALdata$OPG > 0,"delta_ct_MminusEAllPos"]
BALdata[!is.na(BALdata$OPG) & BALdata$OPG > 0,"delta_ct_cewe_MminusE"]
BALdata[BALdata$OPG %in%31,]
BALdata$OPG[BALdata$OPG >0]
BALdata$OPG/30
BALdata$OPG/31
BALdata$OPG[BALdata$OPG >0]
min(BALdata$OPG[BALdata$OPG >0], na.rm = T)
BALdata$OPG / min(BALdata$OPG[BALdata$OPG >0], na.rm = T)
round(BALdata$OPG / min(BALdata$OPG[BALdata$OPG >0], na.rm = T))
BALdata$OPG <- round(BALdata$OPG / min(BALdata$OPG[BALdata$OPG >0], na.rm = T))
hist(BALdata$OPG, 100)
hist(BALdata$OPG, 100)
BALdata$OPG <- round(BALdata$OPG / min(BALdata$OPG[BALdata$OPG >0], na.rm = T))
hist(BALdata$OPG, 100)
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
# add 1 for worms/oocysts count!!
WATWMdata$`Aspiculuris.Syphacia+1` <- WATWMdata$Aspiculuris.Syphacia + 1
BALdata$`Aspiculuris.Syphacia+1` <- BALdata$Aspiculuris_Syphacia + 1
BALdata$OPGdiv31<- round(BALdata$OPG / min(BALdata$OPG[BALdata$OPG >0], na.rm = T))
hist(BALdata$OPGdiv31, 100)
BALdata$`OPGdiv31+1` <- BALdata$OPGdiv31 + 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
# add 1 for worms/oocysts count!!
WATWMdata$`Aspiculuris.Syphacia+1` <- WATWMdata$Aspiculuris.Syphacia + 1
BALdata$`Aspiculuris.Syphacia+1` <- BALdata$Aspiculuris_Syphacia + 1
# for scaling reason, oocysts per gram are expressed in
BALdata$OPGdiv31<- round(BALdata$OPG / min(BALdata$OPG[BALdata$OPG >0], na.rm = T))
BALdata$`OPGdiv31+1` <- BALdata$OPGdiv31 + 1
# and select variables for each analysis
qpcr_data <- BALdata[!is.na(BALdata$HI) &
!is.na(BALdata$Sex) &
!is.na(BALdata$delta_ct_MminusEAllPos), ]
flotation_data <- BALdata[!is.na(BALdata$`OPGdiv31+1`) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex), ]
pinworms_data <- BALdata[!is.na(BALdata$`Aspiculuris.Syphacia+1`) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex),]
body_data <- BALdata[!is.na(BALdata$Body_weight) &
!is.na(BALdata$Body_length) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex) &
!is.na(BALdata$qPCRstatus) ,]
WATWMdata <- WATWMdata[!is.na(WATWMdata$`Aspiculuris.Syphacia+1`) &
!is.na(WATWMdata$HI) &
!is.na(WATWMdata$Sex), ]
# all worms together for comparison
d1 <- WATWMdata[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
d2 <- pinworms_data[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
d1$batch <- "WATWM"
d2$batch <- "JENNY"
allWorms <- rbind(d1,d2)
allWorms$batch <- as.factor(allWorms$batch)
qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0,"delta_ct_MminusEAllPos"]
fits_test_qpcr <- list(
normal = MASS::fitdistr(qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0,"delta_ct_MminusEAllPos"],
"normal"),
student = MASS::fitdistr(qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0, "delta_ct_MminusEAllPos"], "t",
start = list(m = mean(qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0, "delta_ct_MminusEAllPos"]),
s = sd(qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0, "delta_ct_MminusEAllPos"]),
df=3), lower=c(-1, 0.001,1))
)
#Get the logliks for each model...
sapply(fits_test_qpcr, function(i) i$loglik)
fit_flotation_negbin <- analyse(flotation_data[flotation_data$OPG > 0, ],
response = "OPGdiv31+1",
model = "negbin", group = "Sex")
fit_flotation_negbin
bananaPlots(mod = fit_flotation_negbin$H0, data = flotation_data,
response = "OPGdiv31+1")
hyena <- readPNG("/home/alice/Downloads/hyena.png")
## Have fun
library(png)
library(ggplot2)
hyena <- readPNG("/home/alice/Downloads/hyena.png")
myCoolPlot <- function(x, y, myFavoriteAnimal) {
df <- data.frame(x,y)
g <- ggplot(df, aes(x, y)) + theme_bw()
for (i in 1:nrow(df)) {
g <- g + annotation_raster(myFavoriteAnimal, x[i] -0.5, x[i]+0.5, y[i]-0.5, y[i]+0.5)
}
print(g)
}
## Example
x<-c(1,2,8,6,5,10)
y<-c(1,5,8,6,9,2)
myCoolPlot(x,y,hyena)
myCoolPlot <- function(x, y, myFavoriteAnimal) {
df <- data.frame(x,y)
g <- ggplot(df, aes(x, y)) + theme_bw()
for (i in 1:nrow(df)) {
g <- g + annotation_raster(myFavoriteAnimal,
x[i] -0.5, x[i]+0.5, y[i]-0.5, y[i]+0.5)
}
print(g)
}
## Example
x<-c(1,2,8,6,5,10)
y<-c(1,5,8,6,9,2)
myCoolPlot(x,y,hyena)
myCoolPlot <- function(x, y, myFavoriteAnimal) {
df <- data.frame(x,y)
rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
g <- ggplot(df, aes(x, y)) + theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
# for (i in 1:nrow(df)) {
#   g <- g + annotation_raster(myFavoriteAnimal,
#                              x[i] -0.5, x[i]+0.5, y[i]-0.5, y[i]+0.5)
# }
print(g)
}
## Example
x<-c(1,2,8,6,5,10)
y<-c(1,5,8,6,9,2)
myCoolPlot(x,y,hyena)
myCoolPlot <- function(x, y, myFavoriteAnimal) {
df <- data.frame(x,y)
rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
g <- ggplot(df, aes(x, y)) + theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
for (i in 1:nrow(df)) {
g <- g + annotation_raster(myFavoriteAnimal,
xmin = x[i] -0.5, xmax = x[i]+0.5,
ymin = y[i]-0.5, ymax = y[i]+0.5,
interpolate = TRUE)
}
print(g)
}
## Example
x<-c(1,2,8,6,5,10)
y<-c(1,5,8,6,9,2)
myCoolPlot(x,y,hyena)
hyena <- readPNG("/home/alice/Downloads/hyena.png")
myCoolPlot <- function(x, y, myFavoriteAnimal) {
df <- data.frame(x,y)
rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
g <- ggplot(df, aes(x, y)) + theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
for (i in 1:nrow(df)) {
g <- g + annotation_raster(myFavoriteAnimal,
xmin = x[i] -0.5, xmax = x[i]+0.5,
ymin = y[i]-0.5, ymax = y[i]+0.5,
interpolate = TRUE)
}
print(g)
}
## Example
x<-c(1,2,8,6,5,10)
y<-c(1,5,8,6,9,2)
myCoolPlot(x,y,hyena)
df <- data.frame(x,y)
ggplot(df, aes(x, y)) + theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
x<-c(1,2,8,6,5,10)
y<-c(1,5,8,6,9,2)
df <- data.frame(x,y)
rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
ggplot(df, aes(x, y)) +
theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
x<-c(1,2,8,6,5,10)
y<-c(1,5,8,6,9,2)
df <- data.frame(x,y)
rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
ggplot(df, aes(x, y)) +
theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
ggplot(df, aes(x, y)) +
theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point()
x<-c(1,3,2,8,7, 4,6,5,10)
y<-c(1,5,8,6,9,2,1,3,4)
df <- data.frame(x,y)
rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
ggplot(df, aes(x, y)) +
theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point()
# create our plot
ggplot(df, aes(x, y)) +
theme_bw() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point()
# create our plot
ggplot(df, aes(x, y)) +
geom_point() +
theme_classic()
# create our plot more pretty
ggplot(df, aes(x, y)) +
geom_point() +
theme_classic() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
# create our plot more pretty
ggplot(df, aes(x, y)) +
geom_point() +
theme_classic() +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf)
# create our plot more pretty
ggplot(df, aes(x, y)) +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point() +
theme_classic()
# still more pretty
hyena <- readPNG("/home/alice/Downloads/hyena.png")
for (i in 1:nrow(df)) {
g <- g + annotation_raster(hyena                           ,
xmin = x[i] -0.5, xmax = x[i]+0.5,
ymin = y[i]-0.5, ymax = y[i]+0.5,
interpolate = TRUE)
}
g <- ggplot(df, aes(x, y)) +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point() +
theme_classic()
for (i in 1:nrow(df)) {
g <- g + annotation_raster(hyena                           ,
xmin = x[i] -0.5, xmax = x[i]+0.5,
ymin = y[i]-0.5, ymax = y[i]+0.5,
interpolate = TRUE)
}
g
g <- ggplot(df, aes(x, y)) +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point() +
theme_classic()
for (i in 1:nrow(df)) {
g + annotation_raster(hyena                           ,
xmin = x[i] -0.5, xmax = x[i]+0.5,
ymin = y[i]-0.5, ymax = y[i]+0.5,
interpolate = TRUE)
}
g <- ggplot(df, aes(x, y)) +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point() +
theme_classic()
for (i in 1:nrow(df)) {
g + annotation_raster(hyena                           ,
xmin = x[i] -0.5, xmax = x[i]+0.5,
ymin = y[i]-0.5, ymax = y[i]+0.5,
interpolate = TRUE)
}
g
## Have fun
library(png)
library(ggplot2)
# create our dataframe
x<-c(1,3,2,8,7, 4,6,5,10)
y<-c(1,5,8,6,9,2,1,3,4)
df <- data.frame(x,y)
# create our plot
ggplot(df, aes(x, y)) +
geom_point() +
theme_classic()
# booooring
# create our background
rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50)
# create our plot more pretty
ggplot(df, aes(x, y)) +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point() +
theme_classic()
# still more pretty
hyena <- readPNG("/home/alice/Downloads/hyena.png")
# hyena <- readPNG("pathToYourFavoriteAnimal.png")
g <- ggplot(df, aes(x, y)) +
annotation_raster(rainbow, xmin = -Inf, xmax = Inf,
ymin = -Inf,ymax =  Inf) +
geom_point() +
theme_classic()
for (i in 1:nrow(df)) {
g <- g + annotation_raster(hyena                           ,
xmin = x[i] -0.5, xmax = x[i]+0.5,
ymin = y[i]-0.5, ymax = y[i]+0.5,
interpolate = TRUE)
}
g
bananaPlots(data = allWorms, response = "Aspiculuris.Syphacia+1", mod = fit_allWorms_negbin$H3,
group = "batch", islog10 = T)
fit_allWorms_negbin <- analyse(allWorms, "Aspiculuris.Syphacia+1",
model = "negbin", group = "batch")
bananaPlots(data = allWorms, response = "Aspiculuris.Syphacia+1",
mod = fit_allWorms_negbin$H3,
group = "batch", islog10 = T)
bananaPlots
roxygen2::roxygenise()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
library(parasiteLoad)
devtools::build_vignettes()
load("/home/alice/Schreibtisch/git_projects/parasiteLoad/data/BALdata.RData")
View(BALdata)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
# add 1 for worms/oocysts count!!
WATWMdata$`Aspiculuris.Syphacia+1` <- WATWMdata$Aspiculuris.Syphacia + 1
BALdata$`Aspiculuris.Syphacia+1` <- BALdata$Aspiculuris_Syphacia + 1
BALdata$`OPG+1` <- BALdata$OPG + 1
# and select variables for each analysis
qpcr_data <- BALdata[!is.na(BALdata$HI) &
!is.na(BALdata$Sex) &
!is.na(BALdata$delta_ct_MminusEAllPos), ]
flotation_data <- BALdata[!is.na(BALdata$`OPG+1`) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex), ]
pinworms_data <- BALdata[!is.na(BALdata$`Aspiculuris.Syphacia+1`) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex),]
body_data <- BALdata[!is.na(BALdata$Body_weight) &
!is.na(BALdata$Body_length) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex) &
!is.na(BALdata$qPCRstatus) ,]
WATWMdata <- WATWMdata[!is.na(WATWMdata$`Aspiculuris.Syphacia+1`) &
!is.na(WATWMdata$HI) &
!is.na(WATWMdata$Sex), ]
# all worms together for comparison
d1 <- WATWMdata[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
d2 <- pinworms_data[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
d1$batch <- "WATWM"
d2$batch <- "JENNY"
allWorms <- rbind(d1,d2)
allWorms$batch <- as.factor(allWorms$batch)
fit_qpcr_student <- analyse(qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0, ],
response = "delta_ct_MminusEAllPos",
model = "student", group = "Sex")
fit_qpcr_student
plot_qpcr_student <- bananaPlots(mod = fit_qpcr_student$H0,
data = qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0, ],
response = "delta_ct_MminusEAllPos", group = "Sex")
qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0, ]
qpcr_data[qpcr_data$delta_ct_MminusEAllPos > 0, "delta_ct_MminusEAllPos" ]
library(parasiteLoad)
library(parasiteLoad)
devtools::build_vignettes()
library(parasiteLoad)
source('~/Schreibtisch/git_projects/parasiteLoad/R/bananaPlots.R')
library(parasiteLoad)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
## Installation
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
## Prepare dataset for each analysis
# add 1 for worms/oocysts count!!
WATWMdata$`Aspiculuris.Syphacia+1` <- WATWMdata$Aspiculuris.Syphacia + 1
BALdata$`Aspiculuris.Syphacia+1` <- BALdata$Aspiculuris_Syphacia + 1
BALdata$`OPG+1` <- BALdata$OPG + 1
# and select variables for each analysis
qpcr_data <- BALdata[!is.na(BALdata$HI) &
!is.na(BALdata$Sex) &
!is.na(BALdata$delta_ct_MminusEAllPos), ]
flotation_data <- BALdata[!is.na(BALdata$`OPG+1`) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex), ]
pinworms_data <- BALdata[!is.na(BALdata$`Aspiculuris.Syphacia+1`) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex),]
body_data <- BALdata[!is.na(BALdata$Body_weight) &
!is.na(BALdata$Body_length) &
!is.na(BALdata$HI) &
!is.na(BALdata$Sex) &
!is.na(BALdata$qPCRstatus) ,]
WATWMdata <- WATWMdata[!is.na(WATWMdata$`Aspiculuris.Syphacia+1`) &
!is.na(WATWMdata$HI) &
!is.na(WATWMdata$Sex), ]
# all worms together for comparison
d1 <- WATWMdata[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
d2 <- pinworms_data[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
d1$batch <- "WATWM"
d2$batch <- "JENNY"
allWorms <- rbind(d1,d2)
allWorms$batch <- as.factor(allWorms$batch)
## Test coinfection
ggplot(BALdata, aes(x = delta_ct_MminusEAllPos, y = Aspiculuris_Syphacia)) +
geom_point() +
theme_classic()
## Test coinfection
ggplot(BALdata, aes(x = delta_ct_MminusEAllPos, y = Aspiculuris_Syphacia)) +
geom_point(pch = 21, aes(fill = HI)) +
theme_classic()
## Test coinfection
ggplot(BALdata, aes(x = delta_ct_MminusEAllPos, y = Aspiculuris_Syphacia)) +
geom_point(pch = 21, aes(fill = HI)) +
scale_fill_continuous("red", "blue")
## Test coinfection
ggplot(BALdata, aes(x = delta_ct_MminusEAllPos, y = Aspiculuris_Syphacia)) +
geom_point(pch = 21, aes(fill = HI)) +
scale_fill_continuous("red", "blue") +
theme_classic()
## Test coinfection
ggplot(BALdata, aes(x = delta_ct_MminusEAllPos, y = Aspiculuris_Syphacia)) +
geom_point(pch = 21, aes(fill = HI)) +
scale_fill_continuous("red", "blue")# +
## Test coinfection
ggplot(BALdata, aes(x = delta_ct_MminusEAllPos, y = Aspiculuris_Syphacia)) +
geom_point(pch = 21, aes(fill = HI)) +
scale_fill_continuous(high = "red", low = "blue") +
theme_classic()
## Test coinfection
ggplot(BALdata, aes(x = delta_ct_MminusEAllPos, y = Aspiculuris_Syphacia)) +
geom_point(pch = 21, size = 3, aes(fill = HI)) +
scale_fill_continuous(high = "red", low = "blue") +
theme_classic()
## Test coinfection
BALdata$Aspiculuris_Syphacia > 0
## Test coinfection
BALdata[!is.na(BALdata$Aspiculuris_Syphacia) &
BALdata$Aspiculuris_Syphacia > 0 &
!is.na(BALdata$delta_ct_MminusEAllPos) &
BALdata$delta_ct_MminusEAllPos > 0]
## Test coinfection
BALdata[!is.na(BALdata$Aspiculuris_Syphacia) &
BALdata$Aspiculuris_Syphacia > 0 &
!is.na(BALdata$delta_ct_MminusEAllPos) &
BALdata$delta_ct_MminusEAllPos > 0, ]
