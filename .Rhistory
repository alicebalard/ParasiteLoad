"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia\n"
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
myQuantitativeParasitology(flotationdata$OPG)
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia/n"
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
myQuantitativeParasitology(flotationdata$OPG)
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
cat("pinwormsdata_bal$Aspiculuris_Syphacia/n")
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
myQuantitativeParasitology(flotationdata$OPG)
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
cat("pinwormsdata_bal$Aspiculuris_Syphacia/n")
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
myQuantitativeParasitology(flotationdata$OPG)
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
cat("pinwormsdata_bal$Aspiculuris_Syphacia")
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
myQuantitativeParasitology(flotationdata$OPG)
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
print("pinwormsdata_bal$Aspiculuris_Syphacia")
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
myQuantitativeParasitology(flotationdata$OPG)
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia"
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
myQuantitativeParasitology(flotationdata$OPG)
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia : "
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
"qpcrdata$delta_ct_max_MminusEPOS : "
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
"flotationdata$OPG : "
myQuantitativeParasitology(flotationdata$OPG)
"Worms:"
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia:\n "
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
"qpcrdata$delta_ct_max_MminusEPOS : "
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
"flotationdata$OPG : "
myQuantitativeParasitology(flotationdata$OPG)
"Worms:"
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia:/n "
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
"qpcrdata$delta_ct_max_MminusEPOS : "
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
"flotationdata$OPG : "
myQuantitativeParasitology(flotationdata$OPG)
"Worms:"
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia:"
""
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
"qpcrdata$delta_ct_max_MminusEPOS : "
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
"flotationdata$OPG : "
myQuantitativeParasitology(flotationdata$OPG)
"Worms:"
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
"pinwormsdata_bal$Aspiculuris_Syphacia:"
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
"qpcrdata$delta_ct_max_MminusEPOS : "
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
"flotationdata$OPG : "
myQuantitativeParasitology(flotationdata$OPG)
"Worms:"
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
## MLE of parameter k negbin
hist(x, prob=T, breaks = max(x))
x <- pinwormsdata_bal$Aspiculuris_Syphacia
## MLE of parameter k negbin
hist(x, prob=T, breaks = max(x))
# fit the negative binomial distribution
fit <- fitdist(x, "nbinom")
# get the fitted densities. mu and size from fit.
fitD <- dnbinom(0:max(x), size=fit$estimate[1], mu=fit$estimate[2])
# add fitted line (blue) to histogram
lines(fitD, lwd="3", col="blue")
# Goodness of fit with the chi squared test
# get the frequency table
t <- table(x)
# convert to dataframe
df <- as.data.frame(t)
df$x <- as.numeric(as.character(df$x))
df$expp <- pnbinom(q = df$x, size=fit$estimate[1], mu = fit$estimate[2])
df$obsp <- cumsum(df$Freq / sum(df$Freq))
# perform the chi-squared test
chisq.test(x = df$expp, y = df$obsp)
# Pearson's Chi-squared test
#
# data:  df$expp and df$obsp
# X-squared = 9120, df = 9025, p-value = 0.239
# Observed and expected frequencies do not differ significantly (P =
# 0.05) so there is no statistical evidence to reject H 0
size=fit$estimate[1]
size
# The negative binomial distribution seems to describe parasite load well for all parasites
defaultConfig <- list(optimizer = "optimx",
method = c("L-BFGS-B", "bobyqa"),
control = list(follow.on = TRUE))
## Female: alpha fixed at 1.34
model = "negbin"
data = pinworms_data[pinworms_data$Sex =="F",]
defaultConfig <- list(optimizer = "optimx",
method = c("L-BFGS-B", "bobyqa"),
control = list(follow.on = TRUE))
model = "negbin"
data = pinwormsdata_bal
response = "Aspiculuris.Syphacia+1"
paramBounds <- getParamBounds(model, data, response)
paramBounds[["alphaStart"]] <- 1.39
paramBounds[["alphaUB"]] <- 1.38
paramBounds[["alphaLB"]] <- 1.40
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
FitAdvancedAlphaNegbin <- function(data, response, hybridIndex, paramBounds, config){
print("Fitting model advanced with alpha")
data$response <- data[[response]]
start <-  list(L1 = paramBounds[["L1start"]],
L2 = paramBounds[["L2start"]],
A1 = paramBounds[["A1start"]],
A2 = paramBounds[["A2start"]],
alpha = paramBounds[["alphaStart"]],
Z = paramBounds[["Zstart"]])
fit <- bbmle::mle2(
response ~ dnbinom(mu = MeanLoad(L1, L2, alpha, HI),
size = SizeNegBin(A1, A2, Z, HI)),
data = data,
start = start,
lower = c(L1 = paramBounds[["L1LB"]],
L2 = paramBounds[["L2LB"]],
A1 = paramBounds[["A1LB"]],
A2 = paramBounds[["A2LB"]],
alpha = paramBounds[["alphaLB"]],
Z = paramBounds[["ZLB"]]),
upper = c(L1 = paramBounds[["L1UB"]],
L2 = paramBounds[["L2UB"]],
A1 = paramBounds[["A1UB"]],
A2 = paramBounds[["A2UB"]],
alpha = paramBounds[["alphaUB"]],
Z = paramBounds[["ZUB"]]),
optimizer = config$optimizer,
method = config$method,
control = config$control)
printConvergence(fit)
return(fit)
}
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
defaultConfig <- list(optimizer = "optimx",
method = c("L-BFGS-B", "bobyqa"),
control = list(follow.on = TRUE))
model = "negbin"
data = pinwormsdata_bal
response = "Aspiculuris.Syphacia+1"
paramBounds <- getParamBounds(model, data, response)
paramBounds[["alphaStart"]] <- 1.39
paramBounds[["alphaUB"]] <- 1.38
paramBounds[["alphaLB"]] <- 1.40
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
fit_WATWM_abundance <- analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex")
fit_WATWM_abundance <- analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = "WATWMdata",
response = "Aspiculuris.Syphacia+1"))
fit_WATWM_abundance <- analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = "WATWMdata",
response = "Aspiculuris.Syphacia+1"))
getParamBounds(model = "negbin",
data = "WATWMdata",
response = "Aspiculuris.Syphacia+1")
source('~/Desktop/git/Parasite_Load/R/getParamBounds.R')
getParamBounds(model = "negbin",
data = "WATWMdata",
response = "Aspiculuris.Syphacia+1")
data = "WATWMdata"
response = "Aspiculuris.Syphacia+1"
na.omit(data[[response]])
data = WATWMdata
response = "Aspiculuris.Syphacia+1"
na.omit(data[[response]])
getParamBounds(model = "negbin",
data = WATWMdata,
response = "Aspiculuris.Syphacia+1")
fit_WATWM_abundance <- analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = "WATWMdata",
response = "Aspiculuris.Syphacia+1"))
fit_WATWM_abundance <- analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = WATWMdata,
response = "Aspiculuris.Syphacia+1"))
fit_WATWM_abundance <- analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = WATWMdata,
response = "Aspiculuris.Syphacia+1"))
fit_WATWM_abundance <- analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = WATWMdata,
response = "Aspiculuris.Syphacia+1"))
response = "Aspiculuris.Syphacia+1")
analyse(data = WATWMdata, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = WATWMdata,
response = "Aspiculuris.Syphacia+1"))
myparamBounds = getParamBounds(model = "negbin",
data = WATWMdata,
response = "Aspiculuris.Syphacia+1")
myparamBounds
c(L1start = mean(na.omit(data[[response]])),
L1LB = min(na.omit(data[[response]])),
L1UB = max(na.omit(data[[response]])),
L2start = mean(na.omit(data[[response]])),
L2LB = min(na.omit(data[[response]])),
L2UB = max(na.omit(data[[response]])),
alphaStart = 0, alphaLB = -5, alphaUB = 5,
mydfStart = 1, mydfLB = 1, mydfUB = 10)
mean(na.omit(data[[response]]))
data[[response]]
data = WATWMdata
response = "Aspiculuris.Syphacia+1"
data[[response]]
analyse(data = pinwormsdata_watwm, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = WATWMdata,
response = "Aspiculuris.Syphacia+1"))
pinwormsdata_watwm$`Aspiculuris.Syphacia+1`
analyse(data = pinwormsdata_watwm, response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1"))
myparamBounds = getParamBounds(model = "negbin",
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1")
myparamBounds
fit_WATWM_abundance <- analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex",
myparamBounds = getParamBounds(model = "negbin",
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1"))
?analyse
fit_WATWM_abundance <- analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex")
library(parasiteLoad)
roxygen2::roxygenise()
list.of.packages <- c("parasiteLoad",
"bbmle",
"devtools",
"optimx", # for bbmle it needs to be required(?)
"ggplot2",
"VennDiagram",
"fitdistrplus", # evaluate distribution
"epiR", # Sterne's exact method
"simpleboot", # BS
# "boot", # BS
"ggmap",
"gridExtra") # several plots in one panel
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(list.of.packages)
## Install_github case
if(!"legendMap" %in% installed.packages()[,"Package"]){
devtools::install_github("3wen/legendMap")
}
library(legendMap)
plotMap <- function(df, margin = 1, zoom = 8,
source = "stamen", maptype = "toner-lite"){
area <- get_map(location =
c(min(df$Longitude - margin),
min(df$Latitude - margin),
max(df$Longitude + margin),
max(df$Latitude +  margin)),
source = source, maptype= maptype,
zoom = zoom)
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
geom_rect(xmin = 11, xmax = 12.7, ymin = 50, ymax = 51.3, fill = "white") +
scale_bar(lon = 11.8, lat = 50.9, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 5, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2, arrow_north_size = 3)
}
myQuantitativeParasitology <- function(x){
intensity <- round(mean(x[x>0]),1)
abundance <- round(mean(x), 1)
max <- max(x)
Ni <- length(x)
NiPos <- length(x[x>0])
# Confidence intervals for prevalence calculated with Sterne's exact method
sternetest <- epiR::epi.prev(pos = length(x[x > 0]), tested = length(x),
se = 1, sp=1, conf.level = .95, method = "sterne")
cilow <- sternetest$ap["lower"]
cihigh <- sternetest$ap["upper"]
prevalence <- sternetest$ap["est"]
# "Confidence intervals based on normal theory perform poorly
# for skewed distributions, in particular if the sample is small,
# but BCa (bias-corrected and accelerated) bootstrap confidence
# intervals proposed by Efron and Tibshirani (1993) offer a solution
# even in such cases"http://zoologia.hu/list/quant_large.pdf
set.seed(1234) # to make it replicable
bA <- one.boot(x, mean, R=1000)
myBSA <- boot.ci(bA, type=c("bca"))
confinfA <- round(myBSA$bca[4],1)
confsupA <- round(myBSA$bca[5],1)
bI <- one.boot(x[x>0], mean, R=1000)
myBSI <- boot.ci(bI, type=c("bca"))
confinfI <- round(myBSI$bca[4],1)
confsupI <- round(myBSI$bca[5],1)
## Printout results
Result <- cat(paste0("Prevalence % [CI 95%] (N infected hosts/ N hosts)\n",
round(prevalence,1), " [", round(cilow,1), "-", round(cihigh,1), "]",
" (", NiPos, "/", Ni,  ")\n",
"Abundance [CI 95%] (Max parasite load)\n",
round(abundance,1), " [", confinfA, "-", confsupA, "]",
" (", max, ")\n",
"Intensity [CI 95%] (Max parasite load)\n",
round(intensity,1), " [", confinfI, "-", confsupI, "]",
" (", max, ")"))
return(Result)
}
WATWMdata <- read.csv("../data/WATWMdata.csv")
BALdata <- read.csv("../data/BALdata.csv")
# Keep individuals with hybrid index and sex
WATWMdata <- WATWMdata[!is.na(WATWMdata$HI) & !is.na(WATWMdata$Sex),]
BALdata <- BALdata[!is.na(BALdata$HI) & !is.na(BALdata$Sex),]
# pinworms balard
pinwormsdata_bal <- BALdata[!is.na(BALdata$Aspiculuris_Syphacia),]
pinwormsdata_bal$`Aspiculuris.Syphacia+1` <-
pinwormsdata_bal$Aspiculuris_Syphacia + 1
# pinworms "where are the wormy mice"
pinwormsdata_watwm <- WATWMdata[!is.na(WATWMdata$Aspiculuris.Syphacia),]
pinwormsdata_watwm$`Aspiculuris.Syphacia+1` <-
pinwormsdata_watwm$Aspiculuris.Syphacia + 1
# Eimeria qpcr balard
qpcrdata <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) |
!is.na(BALdata$delta_ct_ilwe_MminusE),]
df <- qpcrdata[, c("delta_ct_cewe_MminusE", "delta_ct_ilwe_MminusE")]
qpcrdata$delta_ct_max_MminusE <- apply(df, 1, function(x){max(x, na.rm = T)})
rm(df)
# threshold of detection by qPCR = -5. Then we add -5 to all to have null or positive values
qpcrdata$delta_ct_max_MminusE[qpcrdata$delta_ct_max_MminusE <= -5] <- -5
qpcrdata$delta_ct_max_MminusEPOS <- qpcrdata$delta_ct_max_MminusE + 5
# Eimeria oocysts flotation balard
flotationdata <- BALdata[!is.na(BALdata$OPG),]
flotationdata$OPG <- round(flotationdata$OPG)
flotationdata$`OPG+1` <- flotationdata$OPG + 1
# Body condition index data TBC...
"pinwormsdata_bal$Aspiculuris_Syphacia:"
myQuantitativeParasitology(pinwormsdata_bal$Aspiculuris_Syphacia)
"qpcrdata$delta_ct_max_MminusEPOS : "
myQuantitativeParasitology(qpcrdata$delta_ct_max_MminusEPOS)
"flotationdata$OPG : "
myQuantitativeParasitology(flotationdata$OPG)
"Worms:"
listWorms <- c("Hymenolepis", "Taenia", "Aspiculuris_Syphacia", "Trichuris",
"Heterakis", "Mastophorus")
apply(BALdata[,listWorms], 2, table)
defaultConfig <- list(optimizer = "optimx",
method = c("L-BFGS-B", "bobyqa"),
control = list(follow.on = TRUE))
model = "negbin"
data = pinwormsdata_bal
response = "Aspiculuris.Syphacia+1"
paramBounds <- getParamBounds(model, data, response)
paramBounds[["alphaStart"]] <- 1.39
paramBounds[["alphaUB"]] <- 1.38
paramBounds[["alphaLB"]] <- 1.40
# fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
#                                paramBounds, config = defaultConfig)
# Gtest
# LL1 <- logLik(fitF) + logLik(fitF)
# LL2 <- logLik(fit_pinworms_negbin$H3$groupA) +
#   logLik(fit_pinworms_negbin$H3$groupB)
# dLL <- LL1 - LL2
# dDF <- 2 # 2 alpha fixed in one case
# 1 - pchisq(2*0.66, df=2)
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
paramBounds
paramBounds[["alphaStart"]] <- 1.39
paramBounds[["alphaLB"]] <- 1.30
paramBounds[["alphaUB"]] <- 1.40
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
fitA
paramBounds[["alphaLB"]] <- 1.38
paramBounds[["alphaUB"]] <- 1.40
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
fitA
FitAdvancedAlphaNegbin(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
hybridIndex = "HI",
paramBounds, config = defaultConfig)
FitAdvancedAlphaNegbin(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
hybridIndex = "HI", config = defaultConfig)
analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
hybridIndex = "HI")
analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1", model = "negbin", group = "Sex")
fit_WATWM_abundance$H1
fit_WATWM_abundance <- analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1", model = "negbin", group = "Sex")
fit_WATWM_abundance$H1
plot_WATWM_abundance <- bananaPlots(mod = fit_Joelle_negbin$H1,
data = WATWMdata,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex")
plot_WATWM_abundance <- bananaPlots(mod = fit_Joelle_negbin$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex")
plot_WATWM_abundance <- bananaPlots(mod = fit_WATWM_abundance$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex")
plot_WATWM_abundance <- bananaPlots(mod = fit_WATWM_abundance$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex")
plot_WATWM_abundance
fit_WATWM_abundance$H1
bananaPlots_alpha(mod = fit_WATWM_abundance$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE)
bananaPlots_alpha(mod = fit_WATWM_abundance$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex")
bananaPlots_alpha(mod = fit_WATWM_abundance$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex")
bananaPlots_alpha(mod = fit_WATWM_abundance$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex")
getBananaDF_alpha(mod = fit_WATWM_abundance$H1, hybridIndex = seq(0,1,.1))
myProf <- bbmle::profile(mod = fit_WATWM_abundance$H1)
library(optimx)
myProf <- bbmle::profile(mod = fit_WATWM_abundance$H1)
myProf <- profile(mod = fit_WATWM_abundance$H1)
## Marginal confidence interval
myConfInt <- bbmle::confint(myProf)
myProf <- profile(mod = fit_WATWM_abundance$H1)
myProf <- stats::profile(mod = fit_WATWM_abundance$H1)
myProf <- bbmle::profile(mod = fit_WATWM_abundance$H1)
myProf <- bbmle::profile(mod = fit_WATWM_abundance$H1)
fit_WATWM_abundance <- analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1", model = "negbin", group = "Sex")
fit_WATWM_abundance$H1
myProf <- bbmle::profile(mod = fit_WATWM_abundance$H1)
library(parasiteLoad)
