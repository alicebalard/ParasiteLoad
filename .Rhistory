speciesEimeria$Mouse_ID <- gsub(" ", "", as.character(speciesEimeria$Mouse_ID))
qpcr_data_species <- merge(qpcr_data, speciesEimeria, by = "Mouse_ID")
qpcr_data_species$Mouse_ID[duplicated(qpcr_data_species$Mouse_ID)]
speciesEimeria <- read.csv("https://raw.githubusercontent.com/derele/Mouse_Eimeria_Databasing/master/raw_data/Eimeria_detection/Eimeria_species_assignment_14_17.csv")
speciesEimeria <- speciesEimeria[!names(speciesEimeria) %in% c("Code", "Transect")]
## NB. double infection for AA_0080 + cecum only for AA_0100
speciesEimeria$Mouse_ID[grep("i", speciesEimeria$Mouse_ID)]
speciesEimeria$Mouse_ID[grep("c", speciesEimeria$Mouse_ID)]
speciesEimeria$Mouse_ID[grep("AA_0080", speciesEimeria$Mouse_ID)]
speciesEimeria[grep("AA_0080", speciesEimeria$Mouse_ID),]
speciesEimeria[grep("AA_0100", speciesEimeria$Mouse_ID),]
speciesEimeria[grep("Double", speciesEimeria$Species),]
qpcr_data[grep("AA_0080", speciesEimeria$Mouse_ID),]
View(speciesEimeria)
qpcr_data[grep("AA_0080", qpcr_data$Mouse_ID),]
speciesEimeria[grep("AA_0080", speciesEimeria$Mouse_ID),]
qpcr_data[grep("AA_0100", qpcr_data$Mouse_ID),]
View(qpcr_data)
qpcr_data[grep("SK_3127", qpcr_data$Mouse_ID),]
qpcr_data[grep("3127", qpcr_data$Mouse_ID),]
qpcr_data[grep("0111", qpcr_data$Mouse_ID),]
qpcr_data[grep("0112", qpcr_data$Mouse_ID),]
qpcr_data[grep("0139", qpcr_data$Mouse_ID),]
qpcr_data[grep("stronger", qpcr_data$qPCRsummary),]
qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"]
qpcr_data["delta_ct_cewe_MminusE", "delta_ct_ilwe_MminusE"]
qpcr_data[c("delta_ct_cewe_MminusE", "delta_ct_ilwe_MminusE")]
qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"]
qpcr_data[grep("stronger", qpcr_data$qPCRsummary),
c("Mouse_ID", "delta_ct_cewe_MminusE", "delta_ct_ilwe_MminusE")]
qpcr_data[grep("stronger", qpcr_data$qPCRsummary),
c("Mouse_ID")]
speciesEimeria[speciesEimeria$Mouse_ID %in% qpcr_data[grep("stronger", qpcr_data$qPCRsummary),
c("Mouse_ID")],]
speciesEimeria <- read.csv("https://raw.githubusercontent.com/derele/Mouse_Eimeria_Databasing/master/raw_data/Eimeria_detection/Eimeria_species_assignment_14_17.csv")
speciesEimeria[speciesEimeria$Mouse_ID %in% qpcr_data[grep("stronger", qpcr_data$qPCRsummary),
c("Mouse_ID")],]
speciesEimeria$Mouse_ID %in% "AA_0068"
View(speciesEimeria)
qpcr_data <- BALdata[!is.na(BALdata$HI) &
!is.na(BALdata$Sex) &
!is.na(BALdata$delta_ct_MminusEAllPos), ]
qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"]
qpcr_data[qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],]
-2.34+5
qpcr_data[qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],]
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE"]
qpcr_data[qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE")]
qpcr_data[qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],]
qpcr_data[qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],]
qpcr_data[qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE")]
qpcr_data[qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE", "qPCRsummary")]
qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"]
qpcr_data[qpcr_data$Mouse_ID %in% qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE", "qPCRsummary")]
tocheck <- qpcr_data[qpcr_data$Mouse_ID %in% qpcr_data[grep("stronger", qpcr_data$qPCRsummary),"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE", "qPCRsummary")]
tocheck$delta_ct_ilwe_MminusE > -5 & tocheck$delta_ct_cewe_MminusE > -5
tocheck[tocheck$delta_ct_ilwe_MminusE > -5 & tocheck$delta_ct_cewe_MminusE > -5 ]
tocheck[tocheck$delta_ct_ilwe_MminusE > -5 & tocheck$delta_ct_cewe_MminusE > -5, ]
tocheck <- tocheck[tocheck$delta_ct_ilwe_MminusE > -5 & tocheck$delta_ct_cewe_MminusE > -5, ]
qpcr_data[qpcr_data$Mouse_ID %in%
qpcr_data[qpcr_data$delta_ct_ilwe_MminusE > -5 &
qpcr_data$delta_ct_cewe_MminusE > -5,"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE", "qPCRsummary")]
tocheck <- qpcr_data[qpcr_data$Mouse_ID %in%
qpcr_data[qpcr_data$delta_ct_ilwe_MminusE > -5 &
qpcr_data$delta_ct_cewe_MminusE > -5,"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE", "qPCRsummary")]
tocheck <- qpcr_data[qpcr_data$Mouse_ID %in%
qpcr_data[qpcr_data$delta_ct_ilwe_MminusE > -5 &
qpcr_data$delta_ct_cewe_MminusE > -5,"Mouse_ID"],
c("Mouse_ID", "delta_ct_ilwe_MminusE", "delta_ct_cewe_MminusE", "qPCRsummary")]
write.csv(tocheck, "../../../Schreibtisch/tocheck.csv", row.names = F)
library(parasiteLoad)
load(BALdata)
data(BALdata)
BALdata
mydata <- BALdata
library(parasiteLoad)
BALdata
BALdata <- read.csv("../Mouse_Eimeria_Databasing/data/MiceTable_fullEimeriaInfos_2014to2017.csv")
BALdata
save(BALdata, "data/BALdata.RData")
save(list = BALdata, file = "data/BALdata.RData")
save(list = list(BALdata), file = "data/BALdata.RData")
View(BALdata)
save(BALdata, file = "data/BALdata.RData")
load(BALdata)
load("~/Schreibtisch/git_projects/parasiteLoad/data/BALdata.RData")
BALdata
library(parasiteLoad)
library(bbmle)
library(ggplot2)
library(epiR) # Sterne's exact method
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
library(fitdistrplus) # evaluate distribution
library(epiR) # Sterne's exact method
library(simpleboot) # BS
library(boot) # BS
# plot qPCR
ferrisiDFqpcr <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) &
BALdata$delta_ct_cewe_MminusE > -5 &
!is.na(BALdata$eimeriaSpecies) &
BALdata$eimeriaSpecies == "E_ferrisi",]
BALdata
load(BALdata)
library(parasiteLoad)
BALdata$eimeriaSpecies
# plot qPCR
ferrisiDFqpcr <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) &
BALdata$delta_ct_cewe_MminusE > -5 &
!is.na(BALdata$eimeriaSpecies) &
BALdata$eimeriaSpecies == "E_ferrisi",]
ggplot(ferrisiDFqpcr,
aes(x = HI, y = delta_ct_cewe_MminusE)) +
geom_point() +
facet_grid(.~eimeriaSpecies) +
geom_smooth() +
theme_classic() +
ggtitle("ferrisiqpcr")
qpcrPOS <- ferrisiDFqpcr[ferrisiDFqpcr$delta_ct_cewe_MminusE > -5, "delta_ct_cewe_MminusE"]
fitdistrplus::descdist(qpcrPOS, discrete = FALSE)
fits_test_qpcr <- list(
normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
weibull = fitdistrplus::fitdist(qpcrPOS, "weibull"),
student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
)
fits_test_qpcr <- list(
normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
weibull = fitdistrplus::fitdist(qpcrPOS, "weibull")#,
# student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
)
qpcrPOS
ferrisiDFqpcr$delta_ct_cewe_MminusEPOS <- ferrisiDFqpcr$delta_ct_cewe_MminusEPOS +5
ferrisiDFqpcr$delta_ct_cewe_MminusEPOS <- ferrisiDFqpcr$delta_ct_cewe_MminusE +5
qpcrPOS <- ferrisiDFqpcr[ferrisiDFqpcr$delta_ct_cewe_MminusEPOS > 0,
"delta_ct_cewe_MminusEPOS"]
fitdistrplus::descdist(qpcrPOS, discrete = FALSE)
fits_test_qpcr <- list(
normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
weibull = fitdistrplus::fitdist(qpcrPOS, "weibull"),
student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
)
plot(fits_test_qpcr$normal)
plot(fits_test_qpcr$weibull)
plot(fits_test_qpcr$student)
#Get the logliks for each model...
sapply(fits_test_qpcr, function(i) i$loglik)
sapply(fits_test_qpcr, function(i) i$aic)
averageload <- round(mean(qpcrPOS, na.rm = T),1)
averageload
Ni <- sum(qpcrPOS, na.rm = T)
Ni
Ni <- length(qpcrPOS, na.rm = T)
Ni
Ni <- length(qpcrPOS)
Ni
# Confidence intervals calculated with Sterne's exact method
sternetest <- epiR::epi.prev(pos = length(qpcrPOS), tested = length(qpcrPOS),
se = 1, sp=1, conf.level = .95, method = "sterne")
cilow <- sternetest$ap["lower"]
cihigh <- sternetest$ap["upper"]
prevalence <- sternetest$ap["est"]
Ni
prevalence
cilow
cihigh
View(sternetest)
Meanload <-  mean(qpcrPOS, na.rm = T)
max <- max(qpcrPOS, na.rm = T)
Meanload
max
set.seed(8345) # to make it replicable
b1 <- one.boot(qpcrPOS, mean, R=10000)
b1$t0
boot.ci(b1, type=c("bca"))
## MLE of parameter k negbin
hist(qpcrPOS, prob=T, breaks = max(qpcrPOS))
# fit the negative binomial distribution
fit <- fitdist(qpcrPOS, "weibull")
# get the fitted densities. mu and size from fit.
fitD <- dnbinom(0:max(xPOS), size=fit$estimate[1], mu=fit$estimate[2])
# get the fitted densities. mu and size from fit.
fitD <- dnbinom(0:max(qpcrPOS), size=fit$estimate[1], mu=fit$estimate[2])
# add fitted line (blue) to histogram
lines(fitD, lwd="3", col="blue")
## MLE of parameter k negbin
hist(qpcrPOS, prob=T, breaks = max(qpcrPOS))
# add fitted line (blue) to histogram
lines(fitD, lwd="3", col="blue")
# plot qPCR
ferrisiDFqpcr <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) &
BALdata$delta_ct_cewe_MminusE > -5 &
!is.na(BALdata$eimeriaSpecies) &
BALdata$eimeriaSpecies == "E_ferrisi",]
ferrisiDFqpcr$delta_ct_cewe_MminusEPOS <- ferrisiDFqpcr$delta_ct_cewe_MminusE +5
ferrisiDFqpcrPOS <- ferrisiDFqpcr[ferrisiDFqpcr$delta_ct_cewe_MminusEPOS > 0, ]
View(ferrisiDFqpcrPOS)
qpcrPOS <- ferrisiDFqpcr[ferrisiDFqpcr$delta_ct_cewe_MminusEPOS > 0, "delta_ct_cewe_MminusEPOS"]
fitdistrplus::descdist(qpcrPOS, discrete = FALSE)
fits_test_qpcr <- list(
normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
weibull = fitdistrplus::fitdist(qpcrPOS, "weibull"),
student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
)
plot(fits_test_qpcr$normal)
plot(fits_test_qpcr$weibull)
plot(fits_test_qpcr$student)
#Get the logliks for each model...
sapply(fits_test_qpcr, function(i) i$loglik)
sapply(fits_test_qpcr, function(i) i$aic)
fit_qpcr_weibull <- analyse(ferrisiDFqpcr,
response = "delta_ct_cewe_MminusEPOS",
model = "weibull", group = "Sex")
fit_qpcr_weibull
fit_qpcr_weibull <- analyse(ferrisiDFqpcrPOS,
response = "delta_ct_cewe_MminusEPOS",
model = "weibull", group = "Sex")
fit_qpcr_weibull <- analyse(ferrisiDFqpcr,
response = "delta_ct_cewe_MminusEPOS",
model = "weibull", group = "Sex")
---
title: "Data analysis : test of hybrid immune vigor in response to parasite infection"
subtitle: "Article part 3"
author: "Alice Balard"
date: "`r Sys.Date()`"
output:
rmarkdown::html_vignette:
vignette: >
%\VignetteIndexEntry{Vignette Title}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
```{r setup, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
```
## Installation
```{r install}
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
library(fitdistrplus) # evaluate distribution
library(epiR) # Sterne's exact method
library(simpleboot) # BS
library(boot) # BS
```
## Prepare dataset for each analysis
```{r prepData}
# plot qPCR
ferrisiDFqpcr <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) &
BALdata$delta_ct_cewe_MminusE > -5 &
!is.na(BALdata$eimeriaSpecies) &
BALdata$eimeriaSpecies == "E_ferrisi",]
ferrisiDFqpcr$delta_ct_cewe_MminusEPOS <- ferrisiDFqpcr$delta_ct_cewe_MminusE +5
ggplot(ferrisiDFqpcr,
aes(x = HI, y = delta_ct_cewe_MminusE)) +
geom_point() +
facet_grid(.~eimeriaSpecies) +
geom_smooth() +
theme_classic() +
ggtitle("ferrisiqpcr")
#
# # add 1 for worms/oocysts count!!
# WATWMdata$`Aspiculuris.Syphacia+1` <- WATWMdata$Aspiculuris.Syphacia + 1
# BALdata$`Aspiculuris.Syphacia+1` <- BALdata$Aspiculuris_Syphacia + 1
# BALdata$`OPG+1` <- BALdata$OPG + 1
#
# # and select variables for each analysis
# qpcr_data <- BALdata[!is.na(BALdata$HI) &
#                        !is.na(BALdata$Sex) &
#                        !is.na(BALdata$delta_ct_MminusEAllPos), ]
#
# flotation_data <- BALdata[!is.na(BALdata$`OPG+1`) &
#                             !is.na(BALdata$HI) &
#                             !is.na(BALdata$Sex), ]
#
# pinworms_data <- BALdata[!is.na(BALdata$`Aspiculuris.Syphacia+1`) &
#                            !is.na(BALdata$HI) &
#                            !is.na(BALdata$Sex),]
#
# body_data <- BALdata[!is.na(BALdata$Body_weight) &
#                        !is.na(BALdata$Body_length) &
#                        !is.na(BALdata$HI) &
#                        !is.na(BALdata$Sex) &
#                        !is.na(BALdata$qPCRstatus) ,]
#
# WATWMdata <- WATWMdata[!is.na(WATWMdata$`Aspiculuris.Syphacia+1`) &
#                          !is.na(WATWMdata$HI) &
#                          !is.na(WATWMdata$Sex), ]
#
# # all worms together for comparison
# d1 <- WATWMdata[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
# d2 <- pinworms_data[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
# d1$batch <- "WATWM"
# d2$batch <- "JENNY"
# allWorms <- rbind(d1,d2)
# allWorms$batch <- as.factor(allWorms$batch)
```
## Resistance in hybrids compared to pure strains mice : Eimeria
First, choose a correct distribution for our data
```{r}
#
#
# fitdistrplus::descdist(qpcrPOS, discrete = FALSE)
#
# fits_test_qpcr <- list(
#   normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
#   weibull = fitdistrplus::fitdist(qpcrPOS, "weibull"),
#   student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
# )
#
# plot(fits_test_qpcr$normal)
# plot(fits_test_qpcr$weibull)
# plot(fits_test_qpcr$student)
#
# #Get the logliks for each model...
# sapply(fits_test_qpcr, function(i) i$loglik)
# sapply(fits_test_qpcr, function(i) i$aic)
#
# averageload <- round(mean(qpcrPOS, na.rm = T),1)
# averageload
# Ni <- length(qpcrPOS)
# Ni
# # Confidence intervals calculated with Sterne's exact method
# sternetest <- epiR::epi.prev(pos = length(qpcrPOS), tested = length(qpcrPOS),
#                              se = 1, sp=1, conf.level = .95, method = "sterne")
# cilow <- sternetest$ap["lower"]
# cihigh <- sternetest$ap["upper"]
# prevalence <- sternetest$ap["est"]
#
# Ni
# prevalence
# cilow
# cihigh
#
# Meanload <-  mean(qpcrPOS, na.rm = T)
# max <- max(qpcrPOS, na.rm = T)
# Meanload
# max
#
# set.seed(8345) # to make it replicable
# b1 <- one.boot(qpcrPOS, mean, R=10000)
# b1$t0
# boot.ci(b1, type=c("bca"))
#
# ## MLE of parameter k negbin
# hist(qpcrPOS, prob=T, breaks = max(qpcrPOS))
# # fit the negative binomial distribution
# fit <- fitdist(qpcrPOS, "weibull")
# # get the fitted densities. mu and size from fit.
# fitD <- dnbinom(0:max(qpcrPOS), size=fit$estimate[1], mu=fit$estimate[2])
# # add fitted line (blue) to histogram
# lines(fitD, lwd="3", col="blue")
# # Goodness of fit with the chi squared test
# # get the frequency table
# t <- table(xPOS)
# # convert to dataframe
# df <- as.data.frame(t)
# df$xPOS <- as.numeric(as.character(df$xPOS))
# df$expp <- pnbinom(q = df$xPOS, size=fit$estimate[1], mu = fit$estimate[2])
# df$obsp <- cumsum(df$Freq / sum(df$Freq))
# # perform the chi-squared test
# chisq.test(x = df$expp, y = df$obsp)
#
# size=fit$estimate[1]
# size
# The negative binomial distribution seems to describe parasite load well for all parasites
```
### Choose a correct distribution for our data
Let's compute some fits...
```{r choosefitsqpcr, fig.width=6, fig.height=4}
qpcrPOS <- ferrisiDFqpcr[ferrisiDFqpcr$delta_ct_cewe_MminusEPOS > 0, "delta_ct_cewe_MminusEPOS"]
fitdistrplus::descdist(qpcrPOS, discrete = FALSE)
fits_test_qpcr <- list(
normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
weibull = fitdistrplus::fitdist(qpcrPOS, "weibull"),
student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
)
plot(fits_test_qpcr$normal)
plot(fits_test_qpcr$weibull)
plot(fits_test_qpcr$student)
#Get the logliks for each model...
sapply(fits_test_qpcr, function(i) i$loglik)
sapply(fits_test_qpcr, function(i) i$aic)
```
WEIBULL IS FAR BETTER THAN STUDENT!!
### Run the fit with Weibull distribution
```{r fitandplotweibull, fig.width=6, fig.height=4}
fit_qpcr_weibull <- analyse(ferrisiDFqpcr,
response = "delta_ct_cewe_MminusEPOS",
model = "weibull", group = "Sex")
fit_qpcr_weibull
plot_qpcr_weibull <- bananaPlots(mod = fit_qpcr_weibull$H3,
data = ferrisiDFqpcr,
response = "delta_ct_cewe_MminusEPOS", group = "Sex")
plot_qpcr_weibull
```
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
library(fitdistrplus) # evaluate distribution
library(epiR) # Sterne's exact method
library(parasiteLoad)
library(bbmle)
require(optimx) # for bbmle it needs to be required(?)
library(ggplot2)
library(MASS)
library(fitdistrplus) # evaluate distribution
library(epiR) # Sterne's exact method
library(simpleboot) # BS
library(boot) # BS
# plot qPCR
ferrisiDFqpcr <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) &
BALdata$delta_ct_cewe_MminusE > -5 &
!is.na(BALdata$eimeriaSpecies) &
BALdata$eimeriaSpecies == "E_ferrisi",]
ferrisiDFqpcr$delta_ct_cewe_MminusEPOS <- ferrisiDFqpcr$delta_ct_cewe_MminusE +5
ggplot(ferrisiDFqpcr,
aes(x = HI, y = delta_ct_cewe_MminusE)) +
geom_point() +
facet_grid(.~eimeriaSpecies) +
geom_smooth() +
theme_classic() +
ggtitle("ferrisiqpcr")
#                          !is.na(WATWMdata$HI) &
#                          !is.na(WATWMdata$Sex), ]
#
# # all worms together for comparison
# d1 <- WATWMdata[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
# d2 <- pinworms_data[c("Sex", "Aspiculuris.Syphacia+1", "HI")]
# d1$batch <- "WATWM"
# d2$batch <- "JENNY"
# allWorms <- rbind(d1,d2)
# allWorms$batch <- as.factor(allWorms$batch)
qpcrPOS <- ferrisiDFqpcr[ferrisiDFqpcr$delta_ct_cewe_MminusEPOS > 0, "delta_ct_cewe_MminusEPOS"]
fitdistrplus::descdist(qpcrPOS, discrete = FALSE)
fits_test_qpcr <- list(
normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
weibull = fitdistrplus::fitdist(qpcrPOS, "weibull"),
student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
)
plot(fits_test_qpcr$normal)
plot(fits_test_qpcr$weibull)
#Get the logliks for each model...
sapply(fits_test_qpcr, function(i) i$loglik)
sapply(fits_test_qpcr, function(i) i$aic)
fit_qpcr_weibull <- analyse(ferrisiDFqpcr,
response = "delta_ct_cewe_MminusEPOS",
model = "weibull", group = "Sex")
fit_qpcr_weibull <- analyse(ferrisiDFqpcr,
response = "delta_ct_cewe_MminusEPOS",
model = "weibull", group = "Sex")
fit_qpcr_weibull
plot_qpcr_weibull <- bananaPlots(mod = fit_qpcr_weibull$H3,
data = ferrisiDFqpcr,
response = "delta_ct_cewe_MminusEPOS", group = "Sex")
# plot qPCR
qpcr <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) &
BALdata$delta_ct_cewe_MminusE > -5 &
!is.na(BALdata$eimeriaSpecies) &
BALdata$eimeriaSpecies %in% c("E_ferrisi", "E_falciformis"),]
qpcr$delta_ct_cewe_MminusEPOS <- qpcr$delta_ct_cewe_MminusE +5
View(qpcr)
table(BALdata$eimeriaSpecies)
BALdata$delta_ct_cewe_MminusE[BALdata$eimeriaSpecies == "E_falciformis"]
# plot qPCR
qpcr <- BALdata[!is.na(BALdata$delta_ct_cewe_MminusE) &
BALdata$delta_ct_cewe_MminusE > -5 &
!is.na(BALdata$eimeriaSpecies) &
BALdata$eimeriaSpecies %in% c("E_ferrisi", "E_falciformis"),]
qpcr$delta_ct_cewe_MminusEPOS <- qpcr$delta_ct_cewe_MminusE +5
ggplot(qpcr,
aes(x = HI, y = delta_ct_cewe_MminusE)) +
geom_point() +
facet_grid(.~eimeriaSpecies) +
geom_smooth() +
theme_classic() +
ggtitle("ferrisiqpcr")
ggplot(qpcr,
aes(x = HI, y = delta_ct_cewe_MminusE)) +
geom_point() +
facet_grid(.~eimeriaSpecies) +
# geom_smooth() +
theme_classic() +
ggtitle("ferrisiqpcr")
qpcrPOS <- qpcr[qpcr$delta_ct_cewe_MminusEPOS > 0, "delta_ct_cewe_MminusEPOS"]
fitdistrplus::descdist(qpcrPOS, discrete = FALSE)
fits_test_qpcr <- list(
normal = fitdistrplus::fitdist(qpcrPOS, "norm"),
weibull = fitdistrplus::fitdist(qpcrPOS, "weibull"),
student = fitdistrplus::fitdist(qpcrPOS, "t", start = list(df = 1))
)
fit_qpcr_weibull <- analyse(qpcr,
response = "delta_ct_cewe_MminusEPOS",
model = "weibull", group = "eimeriaSpecies")
droplevels(qpcr$eimeriaSpecies)
qpcr$eimeriaSpecies <- droplevels(qpcr$eimeriaSpecies)
