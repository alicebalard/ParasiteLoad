#' @param myparamBounds A named vector giving the start, lower and upper parameters for optimization
#' @return The full result of the analysis after G-test tests
#' @export
analyse <- function(data, response, model, group,
hybridIndex = "HI",
myparamBounds = "default"){
if (myparamBounds == "default"){
paramBounds <- getParamBounds(model, data, response)
} else {
paramBounds <- myparamBounds
}
print(paste0("Analysing data for response: ", response))
FitForResponse <- runAll(data, response, model, group,
paramBounds = paramBounds,
hybridIndex = data[[hybridIndex]])
####### Is alpha significant for each hypothesis?
# H0: the expected load for the subspecies and between 2 groups is the same
print("Testing H0 no alpha vs alpha")
Gtest(model0 = FitForResponse$FitAll$fitBasicNoAlpha,
model1 = FitForResponse$FitAll$fitBasicAlpha)
H0 <- FitForResponse$FitAll$fitBasicAlpha
# H1: the mean load across 2 groups is the same, but can differ across subspecies
print("Testing H1 no alpha vs alpha")
Gtest(model0 = FitForResponse$FitAll$fitAdvancedNoAlpha,
model1 = FitForResponse$FitAll$fitAdvancedAlpha)
H1 <- FitForResponse$FitAll$fitAdvancedAlpha
# H2: the mean load across subspecies is the same, but can differ between the 2 groups
print("Testing H2 groupA no alpha vs alpha")
Gtest(model0 = FitForResponse$FitGroupA$fitBasicNoAlpha,
model1 = FitForResponse$FitGroupA$fitBasicAlpha)
print("Testing H2 groupB no alpha vs alpha")
Gtest(model0 = FitForResponse$FitGroupB$fitBasicNoAlpha,
model1 = FitForResponse$FitGroupB$fitBasicAlpha)
H2 <- list(groupA = FitForResponse$FitGroupA$fitBasicAlpha,
groupB = FitForResponse$FitGroupB$fitBasicAlpha)
# H3: the mean load can differ both across subspecies and between 2 groups
print("Testing H3 groupA no alpha vs alpha")
Gtest(model0 = FitForResponse$FitGroupA$fitAdvancedNoAlpha,
model1 = FitForResponse$FitGroupA$fitAdvancedAlpha)
print("Testing H3 groupB no alpha vs alpha")
Gtest(model0 = FitForResponse$FitGroupB$fitAdvancedNoAlpha,
model1 = FitForResponse$FitGroupB$fitAdvancedAlpha)
H3 <- list(groupA = FitForResponse$FitGroupA$fitAdvancedAlpha,
groupB = FitForResponse$FitGroupB$fitAdvancedAlpha)
####### Compare the hypotheses with G-tests
# H1 vs H0
print("Testing H1 vs H0")
Gtest(model0 = H0, model1 = H1)
# H2 vs H0
print("Testing H2 vs H0")
Gtest(model0 = H0, model1 = H2)
# H3 vs H1
print("Testing H3 vs H1")
Gtest(model0 = H1, model1 = H3)
# H3 vs H2
print("Testing H3 vs H2")
Gtest(model0 = H2, model1 = H3)
return(list(H0 = H0, H1 = H1, H2 = H2, H3 = H3))
}
analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
hybridIndex = "HI",
paramBounds =
getParamBounds(
"negbin", pinwormsdata_watwm,"Aspiculuris.Syphacia+1"),
config = list(optimizer = "optimx",
method = c("L-BFGS-B", "bobyqa"),
control = list(follow.on = TRUE)))
# D. Apply & plot our model
analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex")
analyse
source('~/Schreibtisch/GIT/parasiteLoad/R/FitNegBin.R')
document()
setwd("../../../parasiteLoad/")
document()
library(parasiteLoad)
# D. Apply & plot our model
analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex")
# D. Apply & plot our model
parasiteLoad::analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex")
# D. Apply & plot our model
parasiteLoad::analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex", hybridIndex = "HI")
document()
library(parasiteLoad)
# D. Apply & plot our model
parasiteLoad::analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex", hybridIndex = "HI")
devtools::document()
library(parasiteLoad)
# D. Apply & plot our model
parasiteLoad::analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex", hybridIndex = "HI")
# Pinworms (A. tetraptera and S. obvelata) : WATWM
fit_WATWM_abundance <- parasiteLoad::analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex",
hybridIndex = pinwormsdata_watwm$HI)
# Pinworms (A. tetraptera and S. obvelata) : WATWM
fit_WATWM_abundance <- parasiteLoad::analyse(data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
model = "negbin",
group = "Sex")
coef(fit_WATWM_abundance$H1)
parasiteLoad::bananaPlot(mod = fit_WATWM_abundance$H1,
data = pinwormsdata_watwm,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex",
cols = c("white", "white"))
fit_WATWM_intensity <- parasiteLoad::analyse(
data = pinwormsdata_watwm[pinwormsdata_watwm$Aspiculuris.Syphacia >=1,],
response = "Aspiculuris.Syphacia+1",
hybridIndex = pinwormsdata_watwm[pinwormsdata_watwm$Aspiculuris.Syphacia >=1, "HI"],
model = "negbin", group = "Sex")
fit_WATWM_intensity <- parasiteLoad::analyse(
data = pinwormsdata_watwm[pinwormsdata_watwm$Aspiculuris.Syphacia >=1,],
response = "Aspiculuris.Syphacia+1", group = "Sex")
fit_WATWM_intensity <- parasiteLoad::analyse(
data = pinwormsdata_watwm[pinwormsdata_watwm$Aspiculuris.Syphacia >=1,],
response = "Aspiculuris.Syphacia+1", group = "Sex", model = "negbin")
coef(fit_WATWM_intensity$H1)
parasiteLoad::bananaPlot(mod = fit_WATWM_intensity$H1,
data = pinwormsdata_watwm[pinwormsdata_watwm$Aspiculuris_Syphacia >=1,],
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex",
cols = c("white", "white"))
fit_BAL_abundance <- parasiteLoad::analyse(data = pinwormsdata_bal,
response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex")
coef(fit_BAL_abundance$H0)
coef(fit_BAL_abundance$H1)
coef(fit_BAL_abundance$H2$groupA)
coef(fit_BAL_abundance$H2$groupB)
coef(fit_BAL_abundance$H3$groupA)
coef(fit_BAL_abundance$H3$groupB)
plotAllWorms <- parasiteLoad::bananaPlot(mod = fit_BAL_abundance$H3,
data = pinwormsdata_bal,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex",
cols = c("#E69F00", "#009E73")) +
theme(axis.title.x=element_blank(),
legend.position = "none") +
scale_y_log10(breaks=c(1,11,101),
"Pinworms abundance (number of worms)",
labels=c(0,10,100))+
scale_x_continuous(labels = c(0, 0.25, 0.5, 0.75, 1))
plotAllWorms <- parasiteLoad::bananaPlot(mod = fit_BAL_abundance$H3,
data = pinwormsdata_bal,
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex",
cols = c("#E69F00", "#009E73"))
plotAllWorms
fit_BAL_intensity <- parasiteLoad::analyse(
data = pinwormsdata_bal[pinwormsdata_bal$Aspiculuris_Syphacia >=1,],
response = "Aspiculuris.Syphacia+1",
model = "negbin", group = "Sex")
coef(fit_BAL_intensity$H0)
coef(fit_BAL_intensity$H1)
coef(fit_BAL_intensity$H2$groupA)
coef(fit_BAL_intensity$H2$groupB)
coef(fit_BAL_intensity$H3$groupA)
coef(fit_BAL_intensity$H3$groupB)
plotInfWorms <- parasiteLoad::bananaPlot(
mod = fit_BAL_intensity$H3,
data = pinwormsdata_bal[pinwormsdata_bal$Aspiculuris_Syphacia >=1,],
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex",
cols = c("#E69F00", "#009E73")) +
# theme(axis.title.x=element_blank(),
# legend.position = "none") +
scale_y_log10(breaks=c(2,11,101),
"Pinworms intensity (number of worms)",
labels=c(1,10,100))+
scale_x_continuous(labels = c(0, 0.25, 0.5, 0.75, 1))
plotInfWorms <- parasiteLoad::bananaPlot(
mod = fit_BAL_intensity$H3,
data = pinwormsdata_bal[pinwormsdata_bal$Aspiculuris_Syphacia >=1,],
response = "Aspiculuris.Syphacia+1",
islog10 = TRUE, group = "Sex",
cols = c("#E69F00", "#009E73"))
plotInfWorms
# intensity : delta_ct_max_MminusE+5 to have it positive
qpcr_intensity_data <- qpcrdata[qpcrdata$`delta_ct_max_MminusE+5` > 0,]
# start with 6, and find out which value of shift maximize the likelihood
qpcr_intensity_data$`delta_ct_max_MminusE+6`
fit_qpcr_intensity_findShift <- parasiteLoad::analyse(
data = qpcr_intensity_data,
response = "delta_ct_max_MminusE+6",
model = "weibullshifted",
group = "Sex")
# Get the shift optimal for H0
fit_qpcr_intensity_findShift$H0
qpcr_intensity_data$shiftedDeltaCt <-
qpcr_intensity_data$`delta_ct_max_MminusE+6` + 1.14
fit_qpcr_intensity <- parasiteLoad::analyse(
data = qpcr_intensity_data,
response = "shiftedDeltaCt",
model = "weibull",
group = "Sex")
fit_qpcr_intensity
coef(fit_qpcr_intensity$H0)
coef(fit_qpcr_intensity$H1)
coef(fit_qpcr_intensity$H2$groupA)
coef(fit_qpcr_intensity$H2$groupB)
coef(fit_qpcr_intensity$H3$groupA)
coef(fit_qpcr_intensity$H3$groupB)
plotInfEimeria <- parasiteLoad::bananaPlot(
mod = fit_qpcr_intensity$H0,
data = qpcr_intensity_data,
response = "shiftedDeltaCt",
islog10 = FALSE, group = "Sex",
cols = c("white", "white")) +
theme(axis.title.x=element_blank(),
legend.position = "none") +
# scale_y_continuous(breaks=0:11,
#                    expression(paste("Eimeria abundance (",
#                                     Delta,
#                                     "CtEimeria-host+5)"))) +
scale_x_continuous(labels = c(0, 0.25, 0.5, 0.75, 1))
plotInfEimeria
plotInfEimeria <- parasiteLoad::bananaPlot(
mod = fit_qpcr_intensity$H0,
data = qpcr_intensity_data,
response = "shiftedDeltaCt",
islog10 = FALSE, group = "Sex",
cols = c("white", "white"))
plotInfEimeria
# opg Eimeria :
min(flotationdata$OPG[flotationdata$OPG >0], na.rm = TRUE)
fit_OPG_abundance <- analyse(data = flotationdata,
response = "OPG+1", model = "negbin", group = "Sex")
fit_OPG_abundance <- parasiteLoad::analyse(data = flotationdata,
response = "OPG+1",
model = "negbin",
group = "Sex")
coef(fit_OPG_abundance$H1)
bananaPlot(mod = fit_OPG_abundance$H1,
data = flotationdata,
response = "OPG+1",
islog10 = TRUE, group = "Sex",
cols = c("white", "white"))
fit_OPG_intensity <- analyse(data = flotationdata[flotationdata$OPG > 0,],
response = "OPG+1", model = "negbin", group = "Sex")
fit_OPG_intensity <- parasiteLoad::analyse(data = flotationdata[flotationdata$OPG > 0,],
response = "OPG+1", model = "negbin", group = "Sex")
coef(fit_OPG_intensity$H1)
bananaPlot(mod = fit_OPG_intensity$H1,
data = flotationdata[flotationdata$OPG > 0,],
response = "OPG+1",
islog10 = TRUE, group = "Sex",
cols = c("white", "white"))
# body_data_eimeria
fitResiduals_eimeria_F <-
parasiteLoad::analyse(data = body_data_eimeria[body_data_eimeria$Sex == "F",],
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues")
plotResiduals_eimeria_F <-
bananaPlot(mod = fitResiduals_eimeria_F$H1,
data = body_data_eimeria[body_data_eimeria$Sex == "F",],
response = "residuals",
group = "presence_eimeria_tissues")
plotResiduals_eimeria_F
is.residuals(body_data_eimeria$residuals)
# males
fitResiduals_M <- parasiteLoad::analyse(data = body_data_eimeria[body_data_eimeria$Sex == "M",],
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues")
plotResiduals_eimeria_M <-
bananaPlot(mod = fitResiduals_M$H1,
data = body_data_eimeria[body_data_eimeria$Sex == "M",],
response = "residuals",
group = "presence_eimeria_tissues")
plotResiduals_eimeria_M
plotResiduals_eimeria_M <-
parasiteLoad::bananaPlot(mod = fitResiduals_M$H1,
data = body_data_eimeria[body_data_eimeria$Sex == "M",],
response = "residuals",
group = "presence_eimeria_tissues")
plotResiduals_eimeria_M
# body_data_eimeria
##All
fitResiduals_eimeria <-
parasiteLoad::analyse(data = body_data_eimeria,
response = "residuals",
model = "normal",
group = "presence_eimeria_tissues")
plotResiduals_eimeria <-
bananaPlot(mod = fitResiduals_eimeria_F$H1,
data = body_data_eimeria,
response = "residuals",
group = "presence_eimeria_tissues")
plotResiduals_eimeria
defaultConfig <- list(optimizer = "optimx",
method = c("L-BFGS-B", "bobyqa"),
control = list(follow.on = TRUE))
model = "negbin"
data = pinwormsdata_bal
response = "Aspiculuris.Syphacia+1"
paramBounds <- getParamBounds(model, data, response)
paramBounds[["alphaStart"]] <- 1.39
paramBounds[["alphaLB"]] <- 1.38
paramBounds[["alphaUB"]] <- 1.40
FitAdvancedAlphaNegbin <- function(data, response, hybridIndex, paramBounds, config){
print("Fitting model advanced with alpha")
data$response <- data[[response]]
start <-  list(L1 = paramBounds[["L1start"]],
L2 = paramBounds[["L2start"]],
A1 = paramBounds[["A1start"]],
A2 = paramBounds[["A2start"]],
alpha = paramBounds[["alphaStart"]],
Z = paramBounds[["Zstart"]])
fit <- bbmle::mle2(
response ~ dnbinom(mu = MeanLoad(L1, L2, alpha, HI),
size = SizeNegBin(A1, A2, Z, HI)),
data = data,
start = start,
lower = c(L1 = paramBounds[["L1LB"]],
L2 = paramBounds[["L2LB"]],
A1 = paramBounds[["A1LB"]],
A2 = paramBounds[["A2LB"]],
alpha = paramBounds[["alphaLB"]],
Z = paramBounds[["ZLB"]]),
upper = c(L1 = paramBounds[["L1UB"]],
L2 = paramBounds[["L2UB"]],
A1 = paramBounds[["A1UB"]],
A2 = paramBounds[["A2UB"]],
alpha = paramBounds[["alphaUB"]],
Z = paramBounds[["ZUB"]]),
optimizer = config$optimizer,
method = config$method,
control = config$control)
printConvergence(fit)
return(fit)
}
fitA <- FitAdvancedAlphaNegbin(data, response, hybridIndex = "HI",
paramBounds, config = defaultConfig)
fitB <- fit_BAL_abundance$H1
# Gtest
LL1 <- logLik(fitA)
LL2 <- logLik(fitB)
dLL <- LL1 - LL2
dDF <- 1 # alpha fixed in one case
1 - pchisq(2*0.66, df=dDF)
# first visualisations
ggplot(qpcrdata, aes(x = HI, y = presence_eimeria_tissues,
group = Sex, col = Sex)) +
geom_point() +
geom_smooth()
ggplot(pinwormsdata_bal, aes(x = HI, y = presence_oxyurids,
group = Sex, col = Sex)) +
geom_point() +
geom_smooth()
# For logistic regression, we use 0 -> 0.5 to test if linear decrease towards the center
qpcrdata$HIdistToCenter <- qpcrdata$HI
qpcrdata$HIdistToCenter[qpcrdata$HI > 0.5] <-
1-qpcrdata$HIdistToCenter[qpcrdata$HI > 0.5]
pinwormsdata_bal$HIdistToCenter <- pinwormsdata_bal$HI
pinwormsdata_bal$HIdistToCenter[pinwormsdata_bal$HI > 0.5] <-
1-pinwormsdata_bal$HIdistToCenter[pinwormsdata_bal$HI > 0.5]
mylogreg <- function(data, presence){
data$pres <- data[,presence]
# Logistic regression, also called a logit model, is used to model dichotomous
# outcome variables. In the logit model the log odds of the outcome is modeled
# as a linear combination of the predictor variables
mydata <- data.frame(HIdistToCenter = data$HIdistToCenter,
presence = data$pres,
Sex = data$Sex)
summary(mydata)
sapply(mydata, sd)
## two-way contingency table of categorical outcome and predictors we want
## to make sure there are not 0 cells
xtabs(~presence + Sex, data = mydata)
mydata$Sex <- factor(mydata$Sex)
mylogit <- glm(presence ~ HIdistToCenter * Sex, data = mydata, family = "binomial")
summary(mylogit)
confint(mylogit)
newdata1 <- with(mydata,
data.frame(HIdistToCenter = mean(HIdistToCenter),
Sex = factor(c("M","F"))))
newdata1$SexP <- predict(mylogit, newdata = newdata1, type = "response")
newdata2 <- with(mydata,
data.frame(HIdistToCenter = rep(seq(from = 0, to = 0.5, length.out = 100), 2),
Sex = factor(rep(c("M", "F"), each = 100))))
newdata3 <- cbind(newdata2, predict(mylogit, newdata = newdata2, type = "link",
se = TRUE))
newdata3 <- within(newdata3, {
PredictedProb <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
## view first few rows of final dataset
head(newdata3)
myplot <- ggplot(newdata3, aes(x = HIdistToCenter, y = PredictedProb)) +
geom_ribbon(aes(ymin = LL,
ymax = UL, fill = Sex), alpha = 0.2) +
geom_line(aes(colour = Sex),
size = 1) +
scale_y_continuous(limits = c(0, 1),
breaks = seq(0, 1, by = 0.1),
labels = c("0", "10%", "20%", "30%", "40%", "50%",
"60%", "70%", "80%", "90%", "100%")) +
geom_rug(data = data, aes(x = HIdistToCenter, y = pres),
alpha=.5) +
scale_color_manual(values = c("#E69F00", "#009E73")) +
scale_fill_manual(values = c("#E69F00", "#009E73")) +
theme_bw()
results <- list(plot = myplot, output = summary(mylogit))
return(results)
}
A <- mylogreg(data = qpcrdata, presence = "presence_eimeria_tissues")
prevalenceAlongHIEimeria <- A$plot
A$output
A$plot
A$plot
source("DataPreparation.R")
# probability of infection
# first visualisations
ggplot(qpcrdata, aes(x = HI, y = presence_eimeria_tissues,
group = Sex, col = Sex)) +
geom_point() +
geom_smooth()
ggplot(pinwormsdata_bal, aes(x = HI, y = presence_oxyurids,
group = Sex, col = Sex)) +
geom_point() +
geom_smooth()
# For logistic regression, we use 0 -> 0.5 to test if linear decrease towards the center
qpcrdata$HIdistToCenter <- qpcrdata$HI
qpcrdata$HIdistToCenter[qpcrdata$HI > 0.5] <-
1-qpcrdata$HIdistToCenter[qpcrdata$HI > 0.5]
pinwormsdata_bal$HIdistToCenter <- pinwormsdata_bal$HI
pinwormsdata_bal$HIdistToCenter[pinwormsdata_bal$HI > 0.5] <-
1-pinwormsdata_bal$HIdistToCenter[pinwormsdata_bal$HI > 0.5]
mylogreg <- function(data, presence){
data$pres <- data[,presence]
# Logistic regression, also called a logit model, is used to model dichotomous
# outcome variables. In the logit model the log odds of the outcome is modeled
# as a linear combination of the predictor variables
mydata <- data.frame(HIdistToCenter = data$HIdistToCenter,
presence = data$pres,
Sex = data$Sex)
summary(mydata)
sapply(mydata, sd)
## two-way contingency table of categorical outcome and predictors we want
## to make sure there are not 0 cells
xtabs(~presence + Sex, data = mydata)
mydata$Sex <- factor(mydata$Sex)
mylogit <- glm(presence ~ HIdistToCenter * Sex, data = mydata, family = "binomial")
summary(mylogit)
confint(mylogit)
newdata1 <- with(mydata,
data.frame(HIdistToCenter = mean(HIdistToCenter),
Sex = factor(c("M","F"))))
newdata1$SexP <- predict(mylogit, newdata = newdata1, type = "response")
newdata2 <- with(mydata,
data.frame(HIdistToCenter = rep(seq(from = 0, to = 0.5, length.out = 100), 2),
Sex = factor(rep(c("M", "F"), each = 100))))
newdata3 <- cbind(newdata2, predict(mylogit, newdata = newdata2, type = "link",
se = TRUE))
newdata3 <- within(newdata3, {
PredictedProb <- plogis(fit)
LL <- plogis(fit - (1.96 * se.fit))
UL <- plogis(fit + (1.96 * se.fit))
})
## view first few rows of final dataset
head(newdata3)
myplot <- ggplot(newdata3, aes(x = HIdistToCenter, y = PredictedProb)) +
geom_ribbon(aes(ymin = LL,
ymax = UL, fill = Sex), alpha = 0.2) +
geom_line(aes(colour = Sex),
size = 1) +
scale_y_continuous(limits = c(0, 1),
breaks = seq(0, 1, by = 0.1),
labels = c("0", "10%", "20%", "30%", "40%", "50%",
"60%", "70%", "80%", "90%", "100%")) +
geom_rug(data = data, aes(x = HIdistToCenter, y = pres),
alpha=.5) +
scale_color_manual(values = c("#E69F00", "#009E73")) +
scale_fill_manual(values = c("#E69F00", "#009E73")) +
theme_bw()
results <- list(plot = myplot, output = summary(mylogit))
return(results)
}
A <- mylogreg(data = qpcrdata, presence = "presence_eimeria_tissues")
prevalenceAlongHIEimeria <- A$plot
A$output
pdf(file = "../figures/prevalenceAlongHIEimeria.pdf", width = 12, height = 8)
A$plot
dev.off()
B <- mylogreg(data = pinwormsdata_bal, presence = "presence_oxyurids")
prevalenceAlongHIpinworms <- B$plot
B$output
pdf(file = "../figures/prevalenceAlongHIpinworms.pdf", width = 12, height = 8)
B$plot
dev.off()
