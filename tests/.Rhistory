library(devtools)
install_github("alicebalard/Parasite_Load")
simpara <- c(k = 2, alpha = 1.92,
"male:old.inter" = 14,
"male:young.inter" = 12,
"male:baby.inter" = 10,
"female:old.inter" = 20,
"female:young.inter" = 18,
"female:baby.inter" = 11,
"male:old.growth" = 2,
"male:young.growth" = 1,
"male:baby.growth" = -4,
"female:old.growth" = 2,
"female:young.growth" = 0,
"female:baby.growth" = -1)
SimulatedData <- function(param, n){
gdata <- data.frame(group1 = rep(c("male", "female"), each=n/2),
group2 = sample(c("old", "young", "baby"),
n, replace=TRUE))
gdata$HI<- round(runif(n), 2)
xloads <- by(gdata, gdata$group1:gdata$group2, function (x) {
pattern <- paste0("^", unique(x$group1), ":", unique(x$group2))
this.param <- param[grepl(pattern, names(param))]
loads <- rnbinom(n = nrow(x), size = param["k"],
mu = glm.hybrid:::MeanLoad(intercept=this.param[grepl("\\.inter",
names(this.param))],
growth=this.param[grepl("\\.growth",
names(this.param))],
alpha=param["alpha"],
HI=x$HI))
cbind(x, loads)
})
as.data.frame(do.call("rbind", xloads))
}
set.seed(5)
simdata <- SimulatedData(simpara, 1000)
opt.para <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=1, start.values=simpara)
glm.h1 <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=1)
glm.try <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=2.5, start.values=simpara[5:8])
non.nb <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=1.5, start.mod = MASS::glm.nb)
opt.para$value
glm.h1$twologlik/2
glm.hybrid::glm.hybrid(formula=loads~group2*HI, data=simdata, "HI")$twologlik/2
glm.hybrid::glm.hybrid(formula = loads ~ group1 * HI * group2, data = simdata, "HI",
alpha.start = 1)
Wdata <- read.csv("../../EvolutionFinalData.csv")
Joelle_data <- read.csv("../../EvolutionFinalData.csv")
Joelle_data <- na.omit(Joelle_data)
glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI")
glm.hybrid::glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI")
glm.hybrid::glm.hybrid(Trichuris ~ HI * Sex, data = Joelle_data, alpha.along = "HI")
source("../R/ML_functions.R")
source("../R/UserInput.R")
glm.hybrid(Trichuris ~ HI * Sex, data = Joelle_data, alpha.along = "HI")
