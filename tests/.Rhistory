library(devtools)
install_github("alicebalard/Parasite_Load")
simpara <- c(k = 2, alpha = 1.92,
"male:old.inter" = 14,
"male:young.inter" = 12,
"male:baby.inter" = 10,
"female:old.inter" = 20,
"female:young.inter" = 18,
"female:baby.inter" = 11,
"male:old.growth" = 2,
"male:young.growth" = 1,
"male:baby.growth" = -4,
"female:old.growth" = 2,
"female:young.growth" = 0,
"female:baby.growth" = -1)
SimulatedData <- function(param, n){
gdata <- data.frame(group1 = rep(c("male", "female"), each=n/2),
group2 = sample(c("old", "young", "baby"),
n, replace=TRUE))
gdata$HI<- round(runif(n), 2)
xloads <- by(gdata, gdata$group1:gdata$group2, function (x) {
pattern <- paste0("^", unique(x$group1), ":", unique(x$group2))
this.param <- param[grepl(pattern, names(param))]
loads <- rnbinom(n = nrow(x), size = param["k"],
mu = glm.hybrid:::MeanLoad(intercept=this.param[grepl("\\.inter",
names(this.param))],
growth=this.param[grepl("\\.growth",
names(this.param))],
alpha=param["alpha"],
HI=x$HI))
cbind(x, loads)
})
as.data.frame(do.call("rbind", xloads))
}
set.seed(5)
simdata <- SimulatedData(simpara, 1000)
opt.para <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=1, start.values=simpara)
glm.h1 <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=1)
glm.try <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=2.5, start.values=simpara[5:8])
non.nb <- glm.hybrid::glm.hybrid(formula=loads~group2*HI*group1, data=simdata, "HI",
alpha.start=1.5, start.mod = MASS::glm.nb)
opt.para$value
glm.h1$twologlik/2
glm.hybrid::glm.hybrid(formula=loads~group2*HI, data=simdata, "HI")$twologlik/2
glm.hybrid::glm.hybrid(formula = loads ~ group1 * HI * group2, data = simdata, "HI",
alpha.start = 1)
Wdata <- read.csv("../../EvolutionFinalData.csv")
Joelle_data <- read.csv("../../EvolutionFinalData.csv")
Joelle_data <- na.omit(Joelle_data)
glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI")
glm.hybrid::glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI")
glm.hybrid::glm.hybrid(Trichuris ~ HI * Sex, data = Joelle_data, alpha.along = "HI")
source("../R/ML_functions.R")
source("../R/UserInput.R")
glm.hybrid(Trichuris ~ HI * Sex, data = Joelle_data, alpha.along = "HI")
source("UserInput.R")
source("../R/UserInput.R")
source("../R/ML_functions.R")
simpara <- c(k = 2, alpha = 1.92,
"male:old.inter" = 14,
"male:young.inter" = 12,
"male:baby.inter" = 10,
"female:old.inter" = 20,
"female:young.inter" = 18,
"female:baby.inter" = 11,
"male:old.growth" = 2,
"male:young.growth" = 1,
"male:baby.growth" = -4,
"female:old.growth" = 2,
"female:young.growth" = 0,
"female:baby.growth" = -1)
Joelle_data <- na.omit(read.csv("../../../EvolutionFinalData.csv"))
SimulatedData <- function(param, n){
gdata <- data.frame(group1 = rep(c("male", "female"), each=n/2),
group2 = sample(c("old", "young", "baby"),
n, replace=TRUE))
gdata$HI<- round(runif(n), 2)
xloads <- by(gdata, gdata$group1:gdata$group2, function (x) {
pattern <- paste0("^", unique(x$group1), ":", unique(x$group2))
this.param <- param[grepl(pattern, names(param))]
loads <- rnbinom(n = nrow(x), size = param["k"],
mu = glm.hybrid:::MeanLoad(intercept=this.param[grepl("\\.inter",
names(this.param))],
growth=this.param[grepl("\\.growth",
names(this.param))],
alpha=param["alpha"],
HI=x$HI))
cbind(x, loads)
})
as.data.frame(do.call("rbind", xloads))
}
set.seed(5)
simdata <- SimulatedData(simpara, 1000)
glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI", alpha.start = 1)
glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI")
G3 <- glm.hybrid(Trichuris ~ HI * Sex, data = Joelle_data, alpha.along = "HI")
G1 <- glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI", alpha.start = 1)
G2 <- glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI")
G4 <- glm.hybrid(loads ~ HI * group1 * group2, data = simdata, alpha.along = "HI")
opt.para <- glm.hybrid(formula=loads ~ HI*group1, data=simdata, alpha.along = "HI",
alpha.start=1, start.values=simpara)
glm.h1 <- glm.hybrid(formula=loads~HI*group1, data=simdata, alpha.along = "HI",
alpha.start=1)
glm.h1.5 <- glm.hybrid(formula=loads~ HI*group1, data=simdata, alpha.along = "HI",
alpha.start=1.5)
glm.h1.9 <- glm.hybrid(formula=loads~ HI*group1, data=simdata, alpha.along = "HI",
alpha.start=1.9)
glm.h2.5 <- glm.hybrid(formula=loads~HI*group1, data=simdata, "HI",
alpha.start=2.5)
para.table <- cbind(simpara,
opt.sim = opt.para$opt.param[names(simpara)],
opt.nb1 = glm.h1$opt.param[names(simpara)],
opt.nb1.5 = glm.h1.5$opt.param[names(simpara)],
opt.nb1.9 = glm.h1.9$opt.param[names(simpara)],
opt.nb2.5 = glm.h2.5$opt.param[names(simpara)])
glm.h1$opt.param
opt.para
names(simpara)
para.table
glm.h1.5$twologlik/2
glm.h1.9$twologlik/2
glm.h2.5$twologlik/2
glm.h1.5
opt.para <- glm.hybrid(formula=loads ~ HI*group1*group2, data=simdata, alpha.along = "HI",
alpha.start=1, start.values=simpara)
glm.h1 <- glm.hybrid(formula=loads~HI*group1*group2, data=simdata, alpha.along = "HI",
alpha.start=1)
glm.h1.5 <- glm.hybrid(formula=loads~ HI*group1*group2, data=simdata, alpha.along = "HI",
alpha.start=1.5)
glm.h1.9 <- glm.hybrid(formula=loads~ HI*group1*group2, data=simdata, alpha.along = "HI",
alpha.start=1.9)
glm.h2.5 <- glm.hybrid(formula=loads~HI*group1*group2, data=simdata, "HI",
alpha.start=2.5)
para.table <- cbind(simpara,
opt.sim = opt.para$opt.param[names(simpara)],
opt.nb1 = glm.h1$opt.param[names(simpara)],
opt.nb1.5 = glm.h1.5$opt.param[names(simpara)],
opt.nb1.9 = glm.h1.9$opt.param[names(simpara)],
opt.nb2.5 = glm.h2.5$opt.param[names(simpara)])
glm.h1$opt.param
opt.para
names(simpara)
para.table
glm.h1$twologlik/2
glm.h1.5$twologlik/2
glm.h1.9$twologlik/2
glm.h2.5$twologlik/2
glm.h1.5
glm.try <- glm.hybrid(formula=loads~HI*group1, data=simdata, "HI",
alpha.start=2.5, start.values=simpara[5:8])
non.nb <- glm.hybrid(formula=loads~HI*group1, data=simdata, "HI",
alpha.start=1.5, start.mod = MASS::glm.nb)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
m1
glm.h1
get(glm.h1)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
glm.h0 <- glm.hybrid(formula=loads~HI, data=simdata, alpha.along = "HI",
alpha.start=1)
glm.h0 <- glm.hybrid(formula=loads~HI*group1, data=simdata, alpha.along = "HI",
alpha.start=1)
anova.hybrid(m1 = glm.h1, m2 = glm.h2.5)
anova.hybrid(m1 = glm.h1, m2 = glm.h0)
source('~/Desktop/git_projects/Parasite_Load/R/ML_functions.R')
anova.hybrid(m1 = glm.h1, m2 = glm.h0)
source("../R/UserInput.R")
source("../R/ML_functions.R")
simpara <- c(k = 2, alpha = 1.92,
"male:old.inter" = 14,
"male:young.inter" = 12,
"male:baby.inter" = 10,
"female:old.inter" = 20,
"female:young.inter" = 18,
"female:baby.inter" = 11,
"male:old.growth" = 2,
"male:young.growth" = 1,
"male:baby.growth" = -4,
"female:old.growth" = 2,
"female:young.growth" = 0,
"female:baby.growth" = -1)
Joelle_data <- na.omit(read.csv("../../../EvolutionFinalData.csv"))
SimulatedData <- function(param, n){
gdata <- data.frame(group1 = rep(c("male", "female"), each=n/2),
group2 = sample(c("old", "young", "baby"),
n, replace=TRUE))
gdata$HI<- round(runif(n), 2)
xloads <- by(gdata, gdata$group1:gdata$group2, function (x) {
pattern <- paste0("^", unique(x$group1), ":", unique(x$group2))
this.param <- param[grepl(pattern, names(param))]
loads <- rnbinom(n = nrow(x), size = param["k"],
mu = glm.hybrid:::MeanLoad(intercept=this.param[grepl("\\.inter",
names(this.param))],
growth=this.param[grepl("\\.growth",
names(this.param))],
alpha=param["alpha"],
HI=x$HI))
cbind(x, loads)
})
as.data.frame(do.call("rbind", xloads))
}
set.seed(5)
simdata <- SimulatedData(simpara, 1000)
G1 <- glm.hybrid(loads ~ HI * group1, data = simdata, alpha.along = "HI", alpha.start = 1)
G1
MeanLoad()
MeanLoad
G1
G1
MeanLoad
x = seq(0,1,0.01)
x
G1$opt.param
grep(".inter", G1$opt.param)
grep(".inter", names(G1$opt.param))
G1$opt.param[grep(".inter", names(G1$opt.param))]
G1$opt.param[grep(".growth", names(G1$opt.param))]
glm.h1 <- glm.hybrid(formula=loads~HI*group1*group2, data=simdata, alpha.along = "HI",
alpha.start=1)
glm.h1
paraPlot <- function(model){
model$opt.param[grep(".inter", names(model$opt.param))]
model$opt.param[grep(".growth", names(model$opt.param))]
}
paraPlot(G1)
paraPlot(glm.h1.51)
paraPlot(glm.h1.5)
paraPlot(glm.h1)
length(model$opt.param[grep(".inter", names(model$opt.param))])
L
paraPlot <- function(model){
L = length(model$opt.param[grep(".inter", names(model$opt.param))])
model$opt.param[grep(".inter", names(model$opt.param))]
model$opt.param[grep(".growth", names(model$opt.param))]
L
}
paraPlot(glm.h1)
paraPlot(G1)
Ngroups
paraPlot <- function(model){
Ngroups = length(model$opt.param[grep(".inter", names(model$opt.param))])
model$opt.param[grep(".inter", names(model$opt.param))]
model$opt.param[grep(".growth", names(model$opt.param))]
Ngroups
}
paraPlot(glm.h1)
paraPlot(G1)
MeanLoad
G1$opt.param["alpha"]
G1
MeanLoad
G1
G1$opt.param["female.inter"]
G1$opt.param["female.growth"]
G1$opt.param["alpha"]
G1$opt.param["k"]
MeanLoad
HI = seq(0,1,0.01)
MeanLoad(G1$opt.param["female.inter"], G1$opt.param["female.growth"],
G1$opt.param["alpha"], HI)
data.frame(HI = seq(0,1,0.01),
ML = MeanLoad(G1$opt.param["female.inter"], G1$opt.param["female.growth"],
G1$opt.param["alpha"], HI))
df <- data.frame(HI = seq(0,1,0.01),
ML = MeanLoad(G1$opt.param["female.inter"], G1$opt.param["female.growth"],
G1$opt.param["alpha"], HI))
library(ggplot2)
ggplot2::ggplot(df, aes(x = HI, y = ML)) +
geom_point()
ggplot2::ggplot(df, aes(x = HI, y = ML)) +
geom_point() +
theme_classic()
df <- data.frame(HI = seq(0,1,0.001),
ML = MeanLoad(G1$opt.param["female.inter"], G1$opt.param["female.growth"],
G1$opt.param["alpha"], HI))
df <- data.frame(HI = seq(0,1,0.001),
ML = MeanLoad(G1$opt.param["female.inter"], G1$opt.param["female.growth"],
G1$opt.param["alpha"], HI))
seq(0,1,0.001)
HI = seq(0,1,0.001)
df <- data.frame(HI = HI,
ML = MeanLoad(G1$opt.param["female.inter"], G1$opt.param["female.growth"],
G1$opt.param["alpha"], HI))
library(ggplot2)
ggplot2::ggplot(df, aes(x = HI, y = ML)) +
geom_point() +
theme_classic()
Joelle_data <- na.omit(read.csv("../../../EvolutionFinalData.csv"))
View(Joelle_data)
View(Joelle_data)
Joelle_data$Mastophorus
table(Joelle_data$Mastophorus)
table(Joelle_data$Mastophorus) != 0
table(Joelle_data$Mastophorus) == 0
names(table(Joelle_data$Mastophorus) == 0)
names(table(Joelle_data$Mastophorus)) == 0
table(Joelle_data$Mastophorus)[names(table(Joelle_data$Mastophorus)) == 0]
sum(table(Joelle_data$Mastophorus)[names(table(Joelle_data$Mastophorus)) == 0])
sum(table(Joelle_data$Mastophorus)[names(table(Joelle_data$Mastophorus)) != 0])
sum(table(Joelle_data$Mastophorus)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(Joelle_data$Mastophorus))
sum(table(Joelle_data$Mastophorus)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(Joelle_data$Mastophorus)) * 100
myprev <- function{sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100}
myprev <- function(x) {
sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100}
myprev <- function(x) {
sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100}
myprev(Joelle_data$Aspiculuris.Syphacia)
mean(Joelle_data$Aspiculuris.Syphacia)
c(paste("Prevalence of", x))}
myprev(Joelle_data$Aspiculuris.Syphacia)
paste(c("Prevalence of", x))}
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100,
mean = mean(x)
paste(c("Prevalence of", x))}
paste("Prevalence of", x)
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100,
mean = mean(x)
paste("Prevalence of", x)
}
return(paste("Prevalence of", x) )
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100,
mean = mean(x)
return(paste("Prevalence of", x) )
}
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste("Prevalence of", x) )
}
myprev(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
return(paste("Prevalence of", prev) )
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste("Prevalence of", prev) )
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste("Prevalence of", prev, ", mean of", mean) )
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
return(paste("Prevalence of", round(prev,1), "%, mean of", round(mean,1), "per mouse"))
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste("Prevalence of", round(prev,1), "%, mean of", round(mean,1), "per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste0("Prevalence of", round(prev,1), "%, mean of", round(mean,1), "per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
return(paste0("Prevalence of ", round(prev,1), "%, mean of ", round(mean,1), " per mouse"))
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste0("Prevalence of ", round(prev,1), "%, mean of ", round(mean,1), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(Joelle_data$Mastophorus)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste0("Prevalence of ", round(prev,2), "%, mean of ", round(mean,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean(Joelle_data$Trichuris)
prev_and_mean(Joelle_data$Taenia)
Joelle_data$Taenia
prev_and_mean(Joelle_data$Taenia)
table(Joelle_data$Taenia)
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste0("Prevalence of ", round(prev,2), "%, mean of ", round(mean,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean(Joelle_data$Trichuris)
prev_and_mean(Joelle_data$Taenia)
Joelle_data$Mastophorus
prev_and_mean(Joelle_data$Mastophorus)
hist(Joelle_data$Aspiculuris.Syphacia)
library(ggplot2)
ggplot(Joelle_data, aes(x = (log(Aspiculuris.Syphacia) + 1)) +
geom_histogram()
ggplot(Joelle_data, aes(x = (log(Aspiculuris.Syphacia) + 1))) +
geom_histogram()
ggplot(Joelle_data, aes(x = (log(Aspiculuris.Syphacia) + 1))) +
geom_histogram()
ggplot(Joelle_data, aes(y = (log(Aspiculuris.Syphacia) + 1))) +
geom_histogram()
ggplot(Joelle_data, aes(y = (log(Aspiculuris.Syphacia) + 1))) +
geom_histogram()
ggplot(Joelle_data, aes(x = (log(Aspiculuris.Syphacia) + 1))) +
geom_histogram()
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram()
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(color = "black")
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(color = "white", fill = "black") +
theme_classic()
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..)+ 1), color = "white", fill = "black") +
theme_classic()
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..)+ 1), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworms")
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..)+ 1), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load")
View(Joelle_data)
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load")
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load") +
xlim(c(0,100))
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load")
ggplot(Joelle_data, aes(x = Trichuris)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Whipworm load")
ggplot(Joelle_data, aes(x = Taenia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Tapeworm load")
ggplot(Joelle_data, aes(x = Mastophorus)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Mastophorus load")
