Joelle_data <- na.omit(read.csv("../../../EvolutionFinalData.csv"))
Joelle_data <- na.omit(read.csv("../../../EvolutionFinalData.csv"))
Joelle_data <- read.csv("../../../EvolutionFinalData.csv")
View(Joelle_data)
table(Joelle_data)
table(Joelle_data[1]
###############################
# parasite prevalence (proportion of infected hosts among all the hosts examined)
# and mean load (the mean number of parasites in all hosts, including the zero values
# of uninfected hosts) with 95% confidence limits over the complete dataset (Rózsa et al. 2000).
# Confidence intervals for prevalence and load were estimated using Sterne's Exact method
# (Reiczigel 2003) and bootstrap (1000 replicates), respectively. Using QP3.0, we modeled
# the aggregation of parasites within hosts using the negative binomial distribution,
# calculating maximum likelihood estimates (MLEs) of parameter k (Bliss and Fisher 1953).
# QP3.0 also calculates a χ2 goodness of fit between expected and observed frequencies
# under the negative binomial model. The pinworm species, A. tetraptera and S. obvelata,
# are considered together throughout all the analyses.
## Prevalence of the bigger groups
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste0("Prevalence of ", round(prev,2), "%, mean of ", round(mean,2), " per mouse"))
}
# caecal nematode pinworms (A. tetraptera and S. obvelata): 70.9% of mice were infected
# with an average load of 39.2 pinworms per mouse
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
# second most widespread infection was due to the caecal nematode Trichuris muris (whipworm)
#found in 21.1% of mice with an average load of 3.9 individuals per mouse (Fig. 2D).
prev_and_mean(Joelle_data$Trichuris)
#The larval stage of Taenia taeniaeformis (tapeworm) was the most prevalent cestode,
# found in the liver of 10.7% of individuals (Fig. 2E).
prev_and_mean(Joelle_data$Taenia)
# The fourth most prevalent parasite was Mastophorus muris,
#found in the stomach of 9.4% of individuals (Fig. 2F).
prev_and_mean(Joelle_data$Mastophorus)
###############################
## Which distribution does fit?
library(ggplot2)
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load")
ggplot(Joelle_data, aes(x = Trichuris)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Whipworm load")
ggplot(Joelle_data, aes(x = Taenia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Tapeworm load")
ggplot(Joelle_data, aes(x = Mastophorus)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Mastophorus load")
table(Joelle_data[1])
table(Joelle_data[2])
View(Joelle_data)
is.na(Joelle_data)
Joelle_data(is.na(Joelle_data))
Joelle_data[is.na(Joelle_data)]
Joelle_data[is.na(Joelle_data)] <- 0
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste0("Prevalence of ", round(prev,2), "%, mean of ", round(mean,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
Joelle_data <- read.csv("../../../EvolutionFinalData.csv")
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean = mean(x)
return(paste0("Prevalence of ", round(prev,2), "%, mean of ", round(mean,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
mean = mean(na.omit(x))
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean = mean(na.omit(x))
return(paste0("Prevalence of ", round(prev,2), "%, mean of ", round(mean,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean(Joelle_data$Trichuris)
prev_and_mean(Joelle_data$Taenia)
prev_and_mean(Joelle_data$Mastophorus)
library(ggplot2)
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load")
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load")
ggplot(Joelle_data, aes(x = Trichuris)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Whipworm load")
View(Joelle_data)
mean_intensity = mean(na.omit(x))
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean_intensity = mean(na.omit(x))
return(paste0("Prevalence of ", round(prev,2), "%, mean of ",
round(mean,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean_intensity = mean(na.omit(x))
return(paste0("Prevalence of ", round(prev,2), "%, mean of ",
round(mean_intensity,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
return(paste0("Prevalence of ", round(prev,2), "%, mean intensity of ",
round(mean_intensity,2), " per mouse"))
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x)) * 100
mean_intensity = mean(na.omit(x))
return(paste0("Prevalence of ", round(prev,2), "%, mean intensity of ",
round(mean_intensity,2), " per mouse"))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
library(epiR)
install.packages("epiR")
library(epiR)
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
epi.prev(pos, tested, se, sp, method = "wilson", units = 100, conf.level = 0.95)
table(Joelle_data$Aspiculuris.Syphacia)
table(Joelle_data$Aspiculuris.Syphacia) != 0
names(table(Joelle_data$Aspiculuris.Syphacia)) != 0
table(Joelle_data$Aspiculuris.Syphacia)[
names(table(Joelle_data$Aspiculuris.Syphacia)) != 0]
sum(table(Joelle_data$Aspiculuris.Syphacia)[
names(table(Joelle_data$Aspiculuris.Syphacia)) != 0])
pos <- sum(table(Joelle_data$Aspiculuris.Syphacia)[
names(table(Joelle_data$Aspiculuris.Syphacia)) != 0])
tested <- length(Joelle_data$Aspiculuris.Syphacia)
epi.prev(pos, tested, se, sp, method = "wilson", units = 100, conf.level = 0.95)
binom.exact(x, n, p = 0.5,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("central", "minlike", "blaker"),
conf.level = 0.95,
control=binomControl(),plot=FALSE, midp=FALSE)
library(exactci)
install.packages("exactci")
pos <- sum(table(Joelle_data$Aspiculuris.Syphacia)[
names(table(Joelle_data$Aspiculuris.Syphacia)) != 0])
n <- length(Joelle_data$Aspiculuris.Syphacia)
binom.exact(pos, n, p = 0.5,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("central", "minlike", "blaker"),
conf.level = 0.95,
control=binomControl(),plot=FALSE, midp=FALSE)
library(exactci)
pos <- sum(table(Joelle_data$Aspiculuris.Syphacia)[
names(table(Joelle_data$Aspiculuris.Syphacia)) != 0])
n <- length(Joelle_data$Aspiculuris.Syphacia)
binom.exact(pos, n, p = 0.5,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("central", "minlike", "blaker"),
conf.level = 0.95,
control=binomControl(),plot=FALSE, midp=FALSE)
binom.exact(pos, n, p = 0.5,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("central", "minlike", "blaker"),
conf.level = 0.95)
binom.exact(pos, n, p = 0.5,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
prev = sum(table(x)[names(table(x)) != 0]) /
sum(table(x))
mean_intensity = mean(na.omit(x))
return(list(prev, mean_intensity))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
pos <- sum(table(Joelle_data$Aspiculuris.Syphacia)[
names(table(Joelle_data$Aspiculuris.Syphacia)) != 0])
n <- length(Joelle_data$Aspiculuris.Syphacia)
pos/n
table(Joelle_data$Aspiculuris.Syphacia)
sum(table(Joelle_data$Aspiculuris.Syphacia))
n
n <- sum(table(Joelle_data$Aspiculuris.Syphacia))
pos/n
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)
b <- binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)
b$conf.int
b$conf.int[1]
pos/n - b$conf.int[1]
b$conf.int[1]
b$conf.int[2]
b$conf.int
n
po
pos
paste0(pos, " (",prev*100)
paste0(c(pos, " (", prev_and_mean[1]))
paste0(c(pos, "(", prev_and_mean[1]))
paste0(c(pos, "("))
as.charater(paste0(c(pos, "(")))
as.character(paste0(c(pos, "(")))
paste0(pos, "("))
paste0(pos, "(")
paste0(pos, " (")
paste0(pos, " (", prev_and_mean[1])
paste0(pos, " (", 12)
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x)))
prev = pos/n
mean_intensity = mean(na.omit(x))
return(list(pos, n, prev, mean_intensity))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
pos = sum(table(x)[names(table(x)) != 0])
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x)))
prev = pos/n
mean_intensity = mean(na.omit(x))
return(list(pos, n, prev, mean_intensity))
}
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
return(list(pos, n, prev, mean_intensity))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
return(data.frame(pos, n, prev, mean_intensity))
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
return(data.frame(pos, n, prev, mean_intensity))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
return(data.frame(pos, n, round(prev,2), round(mean_intensity,2)))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
return(data.frame(pos, n, prev, mean_intensity))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
CI = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int
return(data.frame(pos, n, prev, mean_intensity))
}
return(data.frame(pos, n, prev, mean_intensity, CI))
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
CI = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int
return(data.frame(pos, n, prev, mean_intensity, CI))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
CI = as.vector(binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int)
return(data.frame(pos, n, prev, mean_intensity, CI))
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
CI = as.vector(binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int)
return(data.frame(pos, n, prev, mean_intensity, CI))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
CI = as.vector(binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int)
CI
CI = as.character(binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int)
CI
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
CI_low = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[1]
CI_up = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[2]
return(data.frame(pos, n, prev, mean_intensity, CI_low, CI_up))
}
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
prev = pos/n
mean_intensity = mean(na.omit(x))
CI_low = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[1]
CI_up = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[2]
return(data.frame(pos, n, prev, mean_intensity, CI_low, CI_up))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
CI_low = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[1]*100
CI_up = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[2]*100
return(data.frame(pos, n, prev, mean_intensity, CI_low, CI_up))
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
mean_intensity = mean(na.omit(x))
prev = pos/n * 100
CI_low = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[1]*100
CI_up = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[2]*100
return(data.frame(pos, n, prev, mean_intensity, CI_low, CI_up))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
mean_intensity = mean(na.omit(x))
prev = pos/n * 100
CI_low = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[1]*100
CI_up = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[2]*100
return(data.frame(pos, n, mean_intensity, prev, CI_low, CI_up))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean(Joelle_data$Trichuris)
prev_and_mean <- function(x) {
pos = sum(table(x)[names(table(x)) != 0])
n = sum(table(x))
mean_intensity = mean(na.omit(x))
prev = round(pos/n * 100,2)
CI_low = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[1]*100
CI_up = binom.exact(pos, n, p = pos/n,
alternative = c("two.sided", "less", "greater"),
tsmethod = c("minlike"),
conf.level = 0.95)$conf.int[2]*100
return(data.frame(pos, n, mean_intensity, prev, CI_low, CI_up))
}
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean(Joelle_data$Trichuris)
prev_and_mean(Joelle_data$Taenia)
prev_and_mean(Joelle_data$Mastophorus)
prev_and_mean(Joelle_data$Aspiculuris.Syphacia)
prev_and_mean(Joelle_data$Trichuris)
prev_and_mean(Joelle_data$Taenia)
prev_and_mean(Joelle_data$Mastophorus)
library(ggplot2)
ggplot(Joelle_data, aes(x = Aspiculuris.Syphacia)) +
geom_histogram(aes(y=log(..count..+ 1)), color = "white", fill = "black") +
theme_classic() +
ggtitle(label = "Pinworm load")
hist(Joelle_data$Aspiculuris.Syphacia, prob=TRUE, breaks=145)
hist(Joelle_data$Aspiculuris.Syphacia, prob=TRUE, breaks=145)
library(fitdistrplus)
fit <- fitdist(Joelle_data$Aspiculuris.Syphacia, "nbinom")
install.packages(fitdistrplus)
install.packages("fitdistrplus")
library(fitdistrplus)
fit <- fitdist(Joelle_data$Aspiculuris.Syphacia, "nbinom")
table(Joelle_data$Aspiculuris.Syphacia)
fit <- fitdist(Joelle_data$Aspiculuris.Syphacia, "nbinom")
fit <- fitdist(na.omit(Joelle_data$Aspiculuris.Syphacia, "nbinom"))
df <- data.frame(ID = c(1,1,2,2,3,3), Loads = c(12,15,20,32,10,15,12,15,13),
Age = c(12,13,12,13,12,13))
df <- data.frame(ID = c(1,1,2,2,3,3), Loads = c(12,15,20,32,10,15),
Age = c(12,13,12,13,12,13))
ggplot(df, aes(x = Age, y = Loads, group = ID, color = ID))+
geom_point() +
geom_line()
df <- data.frame(ID = c(1,1,1,2,2,2,3,3,3),
Loads = c(12,14,15,25,21,20,32,10,15),
Age = c(12,13,14,12,13,14,12,13,14))
ggplot(df, aes(x = Age, y = Loads, group = ID, color = ID))+
geom_point() +
geom_line()
ggplot(df, aes(x = Age, y = Loads, group = as.factor(ID),
color = as.factor(ID)))+
geom_point() +
geom_line()
ggplot(df, aes(x = Age, y = Loads, group = as.factor(ID),
color = as.factor(ID)))+
geom_point() +
geom_line() +
theme_classic()
fit <- fitdist(Joelle_data$Aspiculuris.Syphacia, "nbinom")
fit <- fitdist(na.omit(Joelle_data$Aspiculuris.Syphacia), "nbinom")
Joelle_data$Aspiculuris.Syphacia
na.omit(Joelle_data$Aspiculuris.Syphacia)
data = na.omit(Joelle_data$Aspiculuris.Syphacia)
data = as.vector(na.omit(Joelle_data$Aspiculuris.Syphacia))
fit <- fitdist(data, "nbinom")
fit <- fitdist(data = as.vector(na.omit(Joelle_data$Aspiculuris.Syphacia)),
distr = "nbinom")
fit
fit$estimate
fitD <- dnbinom(0:145, size = fit$estimate[1], mu = fit$estimate[2])
lines(fitD, lwd="3", col="blue")
hist(Joelle_data$Aspiculuris.Syphacia, prob=TRUE, breaks=145)
library(fitdistrplus)
fit <- fitdist(data = as.vector(na.omit(Joelle_data$Aspiculuris.Syphacia)),
distr = "nbinom")
fitD <- dnbinom(0:145, size = fit$estimate[1], mu = fit$estimate[2])
data = as.vector(na.omit(Joelle_data$Aspiculuris.Syphacia))
hist(data, prob=TRUE, breaks=145)
library(fitdistrplus)
fit <- fitdist(data = data,
distr = "nbinom")
fitD <- dnbinom(0:145, size = fit$estimate[1], mu = fit$estimate[2])
lines(fitD, lwd="3", col="blue")
t <- table(data[[1]])
df <- as.data.frame(t)
observed_freq <- df$Freq
chisq.test(observed_freq, p=fitD)
t <- table(data)
df <- as.data.frame(t)
observed_freq <- df$Freq
chisq.test(observed_freq, p=fitD)
fitD
chisq.test(observed_freq, p=fitD)
fitD <- dnbinom(0:length(data), size = fit$estimate[1], mu = fit$estimate[2])
lines(fitD, lwd="3", col="blue")
t <- table(data)
df <- as.data.frame(t)
observed_freq <- df$Freq
chisq.test(observed_freq, p=fitD)
observed_freq
p
fitD
fitD <- dnbinom(0:length(data), size = fit$estimate[1], mu = fit$estimate[2])
fitD
